{
  "paragraphs": [
    {
      "title": "",
      "text": "%pyspark\n# Import the necessary dependencies\nfrom pyspark import SparkFiles\nimport pandas as pd\nimport pickle\n\n# Load in the csv\nurl \u003d \"https://ucsd-enron-final-project.s3-us-west-1.amazonaws.com/enron_dataset_named.csv\"\n# spark.sparkContext.addFile(url)\n\n# df \u003d pd.read_pickle(os.path.join(\u0027data\u0027, \u0027final_project_dataset.pkl\u0027))\n\n# Create a Pandas dataframe from the csv\ndf \u003d pd.read_csv(url)\n# df \u003d pd.read_csv(url)\n\n# Display the dataframe\ndf.head()",
      "user": "",
      "dateUpdated": "2019-07-11 19:54:17.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "               name    bonus  bonus-to-salary_ratio  deferral_payments  \\\n0        METTS MARK   600000               1.640294                  0   \n1     BAXTER JOHN C  1200000               4.492666            1295738   \n2    ELLIOTT STEVEN   350000               2.047490                  0   \n3  CORDES WILLIAM R        0               0.000000                  0   \n4    HANNON KEVIN P  1500000               6.165405                  0   \n\n   deferred_income  director_fees  exercised_stock_options  expenses  \\\n0                0              0                        0     94299   \n1         -1386055              0                  6680544     11200   \n2          -400729              0                  4890344     78552   \n3                0              0                   651850         0   \n4         -3117011              0                  5538001     34039   \n\n   fraction_mail_from_poi  fraction_mail_to_poi  ...  long_term_incentive  \\\n0                1.310345              0.001239  ...                    0   \n1                0.000000              0.000000  ...              1586055   \n2                0.000000              0.000000  ...                    0   \n3                0.833333              0.000000  ...                    0   \n4                1.000000              0.020096  ...              1617011   \n\n     other    poi  restricted_stock  restricted_stock_deferred  salary  \\\n0     1740  False            585062                          0  365788   \n1  2660303  False           3942714                          0  267102   \n2    12961  False           1788391                          0  170941   \n3        0  False            386335                          0       0   \n4    11350   True            853064                          0  243293   \n\n   shared_receipt_with_poi  to_messages  total_payments  total_stock_value  \n0                      702          807         1061827             585062  \n1                        0            0         5634343           10623258  \n2                        0            0          211725            6678735  \n3                       58          764               0            1038185  \n4                     1035         1045          288682            6391065  \n\n[5 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190629-184029_1854534200",
      "dateCreated": "2019-06-29 18:40:29.000",
      "dateStarted": "2019-07-11 19:54:16.960",
      "dateFinished": "2019-07-11 19:54:17.223",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Convert the Boolean \"poi\" column into numeric binary values\ndf.poi \u003d df.poi.astype(int)\n\n# Display the updated dataframe\ndf.head()",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:54.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "               name    bonus  bonus-to-salary_ratio  deferral_payments  \\\n0        METTS MARK   600000               1.640294                  0   \n1     BAXTER JOHN C  1200000               4.492666            1295738   \n2    ELLIOTT STEVEN   350000               2.047490                  0   \n3  CORDES WILLIAM R        0               0.000000                  0   \n4    HANNON KEVIN P  1500000               6.165405                  0   \n\n   deferred_income  director_fees  exercised_stock_options  expenses  \\\n0                0              0                        0     94299   \n1         -1386055              0                  6680544     11200   \n2          -400729              0                  4890344     78552   \n3                0              0                   651850         0   \n4         -3117011              0                  5538001     34039   \n\n   fraction_mail_from_poi  fraction_mail_to_poi  ...  long_term_incentive  \\\n0                1.310345              0.001239  ...                    0   \n1                0.000000              0.000000  ...              1586055   \n2                0.000000              0.000000  ...                    0   \n3                0.833333              0.000000  ...                    0   \n4                1.000000              0.020096  ...              1617011   \n\n     other  poi  restricted_stock  restricted_stock_deferred  salary  \\\n0     1740    0            585062                          0  365788   \n1  2660303    0           3942714                          0  267102   \n2    12961    0           1788391                          0  170941   \n3        0    0            386335                          0       0   \n4    11350    1            853064                          0  243293   \n\n   shared_receipt_with_poi  to_messages  total_payments  total_stock_value  \n0                      702          807         1061827             585062  \n1                        0            0         5634343           10623258  \n2                        0            0          211725            6678735  \n3                       58          764               0            1038185  \n4                     1035         1045          288682            6391065  \n\n[5 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190629-200346_825903033",
      "dateCreated": "2019-06-29 20:03:46.000",
      "dateStarted": "2019-07-11 19:49:54.069",
      "dateFinished": "2019-07-11 19:49:54.196",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\r\n# Ensure the necessary dependencies are loaded\r\nimport pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\n# Create the dataframe for the heat map\r\nheat \u003d pd.read_csv(url)\r\n\r\n# Create a function that will generae a correlation heat map for any dataset\r\ndef correlation_heatmap(heat):\r\n    correlations \u003d heat.corr()\r\n\r\n    fig, ax \u003d plt.subplots(figsize\u003d(15,15))\r\n    sns.heatmap(correlations, vmax\u003d1.0, center\u003d0, fmt\u003d\u0027.2f\u0027,\r\n                square\u003dTrue, linewidths\u003d.5, annot\u003dTrue, cbar_kws\u003d{\"shrink\": .70})\r\n    plt.show();\r\n\r\n# Call the function passing the dataframe as the parameter\r\ncorrelation_heatmap(heat)\r\n",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:56.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {},
          {},
          {},
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "\u003cFigure size 1080x1080 with 2 Axes\u003e\n",
            "type": "TEXT"
          },
          {
            "data": "\u003d\u003d\n",
            "type": "IMG"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-015611_834064568",
      "dateCreated": "2019-07-03 01:56:11.000",
      "dateStarted": "2019-07-11 19:49:54.198",
      "dateFinished": "2019-07-11 19:49:56.744",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\r\n# Import the necessary dependencies for trees and random forest\r\nfrom sklearn import tree\r\nimport pandas as pd\r\nimport os",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:57.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-022930_1691265103",
      "dateCreated": "2019-07-03 02:29:30.000",
      "dateStarted": "2019-07-11 19:49:56.973",
      "dateFinished": "2019-07-11 19:49:57.337",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\ntarget \u003d df[\"poi\"]\ntarget_names \u003d [\"negative\", \"positive\"]",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:57.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-025139_1400570832",
      "dateCreated": "2019-07-03 02:51:39.000",
      "dateStarted": "2019-07-11 19:49:57.338",
      "dateFinished": "2019-07-11 19:49:57.450",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Create a clean database without the targeted column and without the String column\ndata_poi \u003d df.drop(\"poi\", axis\u003d1)\ndata_names \u003d data_poi.drop(\"name\", axis\u003d1)\nfeature_names \u003d data_names.columns\ndata_names.head()",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:57.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "     bonus  bonus-to-salary_ratio  deferral_payments  deferred_income  \\\n0   600000               1.640294                  0                0   \n1  1200000               4.492666            1295738         -1386055   \n2   350000               2.047490                  0          -400729   \n3        0               0.000000                  0                0   \n4  1500000               6.165405                  0         -3117011   \n\n   director_fees  exercised_stock_options  expenses  fraction_mail_from_poi  \\\n0              0                        0     94299                1.310345   \n1              0                  6680544     11200                0.000000   \n2              0                  4890344     78552                0.000000   \n3              0                   651850         0                0.833333   \n4              0                  5538001     34039                1.000000   \n\n   fraction_mail_to_poi  from_messages  ...  loan_advances  \\\n0              0.001239             29  ...              0   \n1              0.000000              0  ...              0   \n2              0.000000              0  ...              0   \n3              0.000000             12  ...              0   \n4              0.020096             32  ...              0   \n\n   long_term_incentive    other  restricted_stock  restricted_stock_deferred  \\\n0                    0     1740            585062                          0   \n1              1586055  2660303           3942714                          0   \n2                    0    12961           1788391                          0   \n3                    0        0            386335                          0   \n4              1617011    11350            853064                          0   \n\n   salary  shared_receipt_with_poi  to_messages  total_payments  \\\n0  365788                      702          807         1061827   \n1  267102                        0            0         5634343   \n2  170941                        0            0          211725   \n3       0                       58          764               0   \n4  243293                     1035         1045          288682   \n\n   total_stock_value  \n0             585062  \n1           10623258  \n2            6678735  \n3            1038185  \n4            6391065  \n\n[5 rows x 22 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-025515_1695399889",
      "dateCreated": "2019-07-03 02:55:15.000",
      "dateStarted": "2019-07-11 19:49:57.451",
      "dateFinished": "2019-07-11 19:49:57.563",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nprint(data_names.head())\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test \u003d train_test_split(data_names, target, random_state\u003d15)",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:57.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "     bonus  bonus-to-salary_ratio  deferral_payments  deferred_income  \\\n0   600000               1.640294                  0                0   \n1  1200000               4.492666            1295738         -1386055   \n2   350000               2.047490                  0          -400729   \n3        0               0.000000                  0                0   \n4  1500000               6.165405                  0         -3117011   \n\n   director_fees  exercised_stock_options  expenses  fraction_mail_from_poi  \\\n0              0                        0     94299                1.310345   \n1              0                  6680544     11200                0.000000   \n2              0                  4890344     78552                0.000000   \n3              0                   651850         0                0.833333   \n4              0                  5538001     34039                1.000000   \n\n   fraction_mail_to_poi  from_messages  ...  loan_advances  \\\n0              0.001239             29  ...              0   \n1              0.000000              0  ...              0   \n2              0.000000              0  ...              0   \n3              0.000000             12  ...              0   \n4              0.020096             32  ...              0   \n\n   long_term_incentive    other  restricted_stock  restricted_stock_deferred  \\\n0                    0     1740            585062                          0   \n1              1586055  2660303           3942714                          0   \n2                    0    12961           1788391                          0   \n3                    0        0            386335                          0   \n4              1617011    11350            853064                          0   \n\n   salary  shared_receipt_with_poi  to_messages  total_payments  \\\n0  365788                      702          807         1061827   \n1  267102                        0            0         5634343   \n2  170941                        0            0          211725   \n3       0                       58          764               0   \n4  243293                     1035         1045          288682   \n\n   total_stock_value  \n0             585062  \n1           10623258  \n2            6678735  \n3            1038185  \n4            6391065  \n\n[5 rows x 22 columns]\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-025547_638943629",
      "dateCreated": "2019-07-03 02:55:47.000",
      "dateStarted": "2019-07-11 19:49:57.565",
      "dateFinished": "2019-07-11 19:49:57.679",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# clf \u003d tree.DecisionTreeClassifier()\n# clf \u003d clf.fit(X_train, y_train)\n# clf.score(X_test, y_test)\n# print(data)\nfrom sklearn.ensemble import RandomForestClassifier\nrf \u003d RandomForestClassifier(n_estimators\u003d1000)\nrf \u003d rf.fit(X_train, y_train)\nrf.score(X_test, y_test)",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "0.8888888888888888",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-025631_319764487",
      "dateCreated": "2019-07-03 02:56:31.000",
      "dateStarted": "2019-07-11 19:49:57.681",
      "dateFinished": "2019-07-11 19:49:59.247",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nsorted(zip(rf.feature_importances_, feature_names), reverse\u003dTrue)",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "[(0.09972812880132305, \u0027exercised_stock_options\u0027),\n (0.08381374850083799, \u0027fraction_mail_from_poi\u0027),\n (0.08138118509493603, \u0027restricted_stock\u0027),\n (0.080740567033768, \u0027other\u0027),\n (0.07359690594202964, \u0027total_stock_value\u0027),\n (0.0701063243052086, \u0027long_term_incentive\u0027),\n (0.06621986119139905, \u0027salary\u0027),\n (0.06384089404515608, \u0027expenses\u0027),\n (0.05152980303651381, \u0027total_payments\u0027),\n (0.05103619856644881, \u0027bonus\u0027),\n (0.04549169773008914, \u0027bonus-to-salary_ratio\u0027),\n (0.03953523179402809, \u0027deferred_income\u0027),\n (0.038739501584571144, \u0027fraction_mail_to_poi\u0027),\n (0.035501319796091106, \u0027shared_receipt_with_poi\u0027),\n (0.03333222210380458, \u0027from_this_person_to_poi\u0027),\n (0.02870661867048297, \u0027from_poi_to_this_person\u0027),\n (0.02756198527199031, \u0027from_messages\u0027),\n (0.018565622839771825, \u0027to_messages\u0027),\n (0.008409291661845314, \u0027deferral_payments\u0027),\n (0.001276066346333399, \u0027restricted_stock_deferred\u0027),\n (0.0005773732234009453, \u0027loan_advances\u0027),\n (0.0003094524599700731, \u0027director_fees\u0027)]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-025647_1002463754",
      "dateCreated": "2019-07-03 02:56:47.000",
      "dateStarted": "2019-07-11 19:49:59.249",
      "dateFinished": "2019-07-11 19:49:59.411",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.tree import DecisionTreeClassifier\ndtree\u003dDecisionTreeClassifier()\n# dtree.fit(df,y)",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-030342_1392961964",
      "dateCreated": "2019-07-03 03:03:42.000",
      "dateStarted": "2019-07-11 19:49:59.412",
      "dateFinished": "2019-07-11 19:49:59.524",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom sklearn import preprocessing\r\nimport matplotlib.pyplot as plt \r\nplt.rc(\"font\", size\u003d14)\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.model_selection import train_test_split\r\nimport seaborn as sns\r\nsns.set(style\u003d\"white\")\r\nsns.set(style\u003d\"whitegrid\", color_codes\u003dTrue)",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-031531_1635267043",
      "dateCreated": "2019-07-03 03:15:31.000",
      "dateStarted": "2019-07-11 19:49:59.525",
      "dateFinished": "2019-07-11 19:49:59.686",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.datasets import make_blobs\nX, y \u003d make_blobs(centers\u003d2, random_state\u003d42)\n\n#poi_df \u003d df[\u0027poi\u0027]\n\n#poi_df.poi \u003d poi_df.poi.astype(int)\n#print(poi_df.head())\n#poi_df[\u0027new_col\u0027] \u003d range(1, len(poi_df) + 1)\n#poi_df \u003d poi_df.reset_index()\n\n#X \u003d poi_df[\u0027poi\u0027].tolist()\n\n# X \u003dpoi_df.iloc[:,2:4].values\n#X \u003d poi_df.iloc[:,0].values\n#X \u003d poi.df[:, \u0027poi\u0027]\n#y\u003d df.iloc[:,4].values\n\ndf.poi \u003d df.poi.astype(int)\ndf.head()\n\nprint(X)\nprint(y)\n\nprint(y[:10])\nprint(X[1:10])\n\ndf.head()",
      "user": "",
      "dateUpdated": "2019-07-11 19:49:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "[[-2.98837186  8.82862715]\n [ 5.72293008  3.02697174]\n [-3.05358035  9.12520872]\n [ 5.461939    3.86996267]\n [ 4.86733877  3.28031244]\n [-2.14780202 10.55232269]\n [ 4.91656964  2.80035293]\n [ 3.08921541  2.04173266]\n [-2.90130578  7.55077118]\n [-3.34841515  8.70507375]\n [-2.44166942  7.58953794]\n [ 3.40292813  0.65271307]\n [-2.97867201  9.55684617]\n [-3.83738367  9.21114736]\n [ 3.95985411  2.20542338]\n [ 3.85662554  1.65110817]\n [ 4.70010905  4.4364118 ]\n [ 3.56898634  2.4556421 ]\n [ 4.69808755  0.83019939]\n [-2.41743685  7.02671721]\n [ 4.85397258  0.72743091]\n [ 4.44751787  2.27471703]\n [ 5.43091078  1.06378223]\n [ 5.60325497  2.38595061]\n [ 4.89976163  2.75499256]\n [-0.92998481  9.78172086]\n [ 4.56277713  2.31432166]\n [-1.6966718  10.37052616]\n [ 5.1618204   2.27015436]\n [ 4.375222    4.69333885]\n [-2.743351    8.78014917]\n [-3.98771961  8.29444192]\n [-3.6601912   9.38998415]\n [-1.04354885  8.78850983]\n [-2.16557933  7.25124597]\n [ 5.22673593  4.16362531]\n [ 4.81305976  2.35848706]\n [-2.17793419  9.98983126]\n [-3.31769123  8.51252908]\n [-2.30033403  7.054616  ]\n [-1.77073104  9.18565441]\n [ 5.45339605  0.74230537]\n [ 3.66519717  2.76025429]\n [ 5.11311646  1.90034077]\n [ 4.39449072  1.21943352]\n [-1.03130358  8.49601591]\n [-2.54502366 10.57892978]\n [-2.21307735  9.2753414 ]\n [-3.6155326   7.8180795 ]\n [ 3.44857534  2.62972329]\n [ 4.65288073  3.42670376]\n [-4.23411546  8.4519986 ]\n [-2.97261532  8.54855637]\n [ 4.9976662   2.53395421]\n [-2.26723535  7.10100588]\n [ 5.26554618  1.11601213]\n [-2.41212007  9.98293112]\n [ 4.89742923  1.89872377]\n [ 3.75036441  1.1573594 ]\n [-2.1475616   8.36916637]\n [-2.42215055  8.71527878]\n [ 4.41641605  2.68717018]\n [-3.03895783  9.52755356]\n [ 2.72110762  1.94665581]\n [ 5.79847442  1.15248737]\n [ 3.7560214   2.12689479]\n [ 6.52606474  2.1477475 ]\n [-3.92456837  8.59364081]\n [ 3.0323956   2.15780354]\n [ 4.89037169  2.31961789]\n [-2.96983639 10.07140835]\n [ 3.64934251  1.40687195]\n [ 6.50565335  2.4470026 ]\n [ 5.78270165  2.72510272]\n [ 4.19336388  2.82956848]\n [ 4.47859312  2.37722054]\n [ 4.7395302   1.46969403]\n [-2.58120774 10.01781903]\n [ 3.7204546   3.52310409]\n [-2.52269485  7.9565752 ]\n [ 4.93295131  1.25881827]\n [-3.11090424 10.86656431]\n [-1.68665271  7.79344248]\n [-3.4172217   7.60198243]\n [ 3.57757512  2.44676211]\n [-2.62484591  8.71318243]\n [-3.21125072  8.68662398]\n [-5.12894273  9.83618863]\n [ 4.60516707  0.80449165]\n [-3.52202874  9.32853346]\n [ 6.04267315  0.57131862]\n [-3.10983631  8.72259238]\n [-2.18511365  8.62920385]\n [-3.18611962  9.62596242]\n [-2.85191214  8.21200886]\n [-1.4781981   9.94556625]\n [-1.59379551  9.34303724]\n [ 3.79308512  0.45832246]\n [-2.72886951  9.3713987 ]\n [-2.50408417  8.77969899]]\n[0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 1\n 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1\n 1 1 1 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0]\n[0 1 0 1 1 0 1 1 0 0]\n[[ 5.72293008  3.02697174]\n [-3.05358035  9.12520872]\n [ 5.461939    3.86996267]\n [ 4.86733877  3.28031244]\n [-2.14780202 10.55232269]\n [ 4.91656964  2.80035293]\n [ 3.08921541  2.04173266]\n [-2.90130578  7.55077118]\n [-3.34841515  8.70507375]]\n               name    bonus  bonus-to-salary_ratio  deferral_payments  \\\n0        METTS MARK   600000               1.640294                  0   \n1     BAXTER JOHN C  1200000               4.492666            1295738   \n2    ELLIOTT STEVEN   350000               2.047490                  0   \n3  CORDES WILLIAM R        0               0.000000                  0   \n4    HANNON KEVIN P  1500000               6.165405                  0   \n\n   deferred_income  director_fees  exercised_stock_options  expenses  \\\n0                0              0                        0     94299   \n1         -1386055              0                  6680544     11200   \n2          -400729              0                  4890344     78552   \n3                0              0                   651850         0   \n4         -3117011              0                  5538001     34039   \n\n   fraction_mail_from_poi  fraction_mail_to_poi  ...  long_term_incentive  \\\n0                1.310345              0.001239  ...                    0   \n1                0.000000              0.000000  ...              1586055   \n2                0.000000              0.000000  ...                    0   \n3                0.833333              0.000000  ...                    0   \n4                1.000000              0.020096  ...              1617011   \n\n     other  poi  restricted_stock  restricted_stock_deferred  salary  \\\n0     1740    0            585062                          0  365788   \n1  2660303    0           3942714                          0  267102   \n2    12961    0           1788391                          0  170941   \n3        0    0            386335                          0       0   \n4    11350    1            853064                          0  243293   \n\n   shared_receipt_with_poi  to_messages  total_payments  total_stock_value  \n0                      702          807         1061827             585062  \n1                        0            0         5634343           10623258  \n2                        0            0          211725            6678735  \n3                       58          764               0            1038185  \n4                     1035         1045          288682            6391065  \n\n[5 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190703-034402_1986018247",
      "dateCreated": "2019-07-03 03:44:02.000",
      "dateStarted": "2019-07-11 19:49:59.687",
      "dateFinished": "2019-07-11 19:49:59.852",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nplt.scatter(X[:, 0], X[:, 1], c\u003dy)\n\n#print(X[:, 0])\n#print(X[:, 1])",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {},
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "\u003cmatplotlib.collections.PathCollection at 0x7fbad0057750\u003e\u003cFigure size 432x288 with 1 Axes\u003e\n",
            "type": "TEXT"
          },
          {
            "data": "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\u003d\n",
            "type": "IMG"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-173103_1817794329",
      "dateCreated": "2019-07-06 17:31:03.000",
      "dateStarted": "2019-07-11 19:49:59.853",
      "dateFinished": "2019-07-11 19:50:00.171",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test \u003d train_test_split(X, y, random_state\u003d1, stratify\u003dy)",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {},
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-175247_1501095128",
      "dateCreated": "2019-07-06 17:52:47.000",
      "dateStarted": "2019-07-11 19:50:00.173",
      "dateFinished": "2019-07-11 19:50:00.285",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.linear_model import LogisticRegression\nclassifier \u003d LogisticRegression()\nclassifier",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "LogisticRegression(C\u003d1.0, class_weight\u003dNone, dual\u003dFalse, fit_intercept\u003dTrue,\n          intercept_scaling\u003d1, max_iter\u003d100, multi_class\u003d\u0027warn\u0027,\n          n_jobs\u003dNone, penalty\u003d\u0027l2\u0027, random_state\u003dNone, solver\u003d\u0027warn\u0027,\n          tol\u003d0.0001, verbose\u003d0, warm_start\u003dFalse)",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-181736_1657611335",
      "dateCreated": "2019-07-06 18:17:36.000",
      "dateStarted": "2019-07-11 19:50:00.287",
      "dateFinished": "2019-07-11 19:50:00.399",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nclassifier.fit(X_train, y_train)",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "/usr/zepl/miniconda2/lib/python2.7/site-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to \u0027lbfgs\u0027 in 0.22. Specify a solver to silence this warning.\n  FutureWarning)\nLogisticRegression(C\u003d1.0, class_weight\u003dNone, dual\u003dFalse, fit_intercept\u003dTrue,\n          intercept_scaling\u003d1, max_iter\u003d100, multi_class\u003d\u0027warn\u0027,\n          n_jobs\u003dNone, penalty\u003d\u0027l2\u0027, random_state\u003dNone, solver\u003d\u0027warn\u0027,\n          tol\u003d0.0001, verbose\u003d0, warm_start\u003dFalse)",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-183241_496935068",
      "dateCreated": "2019-07-06 18:32:41.000",
      "dateStarted": "2019-07-11 19:50:00.401",
      "dateFinished": "2019-07-11 19:50:00.512",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Training score\nprint(classifier.score(X_train, y_train))\n#Testing score\nprint(classifier.score(X_test, y_test))\n\n",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "1.0\n1.0\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-183247_651994316",
      "dateCreated": "2019-07-06 18:32:47.000",
      "dateStarted": "2019-07-11 19:50:00.513",
      "dateFinished": "2019-07-11 19:50:00.623",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Generate a new data point (the red circle)\nimport numpy as np\nnew_data \u003d np.array([[-4, 6]])\nplt.scatter(X[:, 0], X[:, 1], c\u003dy)\nplt.scatter(new_data[0, 0], new_data[0, 1], c\u003d\"r\", marker\u003d\"o\", s\u003d100)",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {},
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "\u003cmatplotlib.collections.PathCollection at 0x7fbad1221d10\u003e\u003cFigure size 432x288 with 1 Axes\u003e\n",
            "type": "TEXT"
          },
          {
            "data": "\u003d\u003d\n",
            "type": "IMG"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-183314_1847501716",
      "dateCreated": "2019-07-06 18:33:14.000",
      "dateStarted": "2019-07-11 19:50:00.625",
      "dateFinished": "2019-07-11 19:50:00.897",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\ny_pred \u003d classifier.predict(X_test)\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix \u003d confusion_matrix(y_test, y_pred)\nprint(confusion_matrix)",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:01.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "[[12  0]\n [ 0 13]]\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-183436_1863671747",
      "dateCreated": "2019-07-06 18:34:36.000",
      "dateStarted": "2019-07-11 19:50:00.899",
      "dateFinished": "2019-07-11 19:50:01.011",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Predict the class (black, cream) of the new data point\n# black \u003d POI, cream \u003d non-POI\npredictions \u003d classifier.predict(new_data)\nprint(\"Classes are either 0 (black) or 1 (cream)\")\n# Predictions\nprint(predictions)",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:01.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "Classes are either 0 (black) or 1 (cream)\n[0]\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-184230_328250681",
      "dateCreated": "2019-07-06 18:42:30.000",
      "dateStarted": "2019-07-11 19:50:01.013",
      "dateFinished": "2019-07-11 19:50:01.127",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\npredictions \u003d classifier.predict(X_test)\npd.DataFrame({\"Prediction\": predictions, \"Actual\": y_test})",
      "user": "",
      "dateUpdated": "2019-07-11 19:50:01.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "    Actual  Prediction\n0        1           1\n1        0           0\n2        1           1\n3        1           1\n4        1           1\n5        0           0\n6        1           1\n7        1           1\n8        1           1\n9        0           0\n10       0           0\n11       1           1\n12       1           1\n13       0           0\n14       1           1\n15       0           0\n16       0           0\n17       0           0\n18       0           0\n19       0           0\n20       1           1\n21       1           1\n22       0           0\n23       0           0\n24       1           1",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-184809_297573530",
      "dateCreated": "2019-07-06 18:48:09.000",
      "dateStarted": "2019-07-11 19:50:01.129",
      "dateFinished": "2019-07-11 19:50:01.243",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Hierarchal Analysis\n\n# Import Dependencies\n\nimport matplotlib.pyplot as plt  \nimport pandas as pd  \n%matplotlib inline\nimport numpy as np",
      "user": "",
      "dateUpdated": "2019-07-11 19:53:39.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190706-185046_1932556892",
      "dateCreated": "2019-07-06 18:50:46.000",
      "dateStarted": "2019-07-11 19:53:39.365",
      "dateFinished": "2019-07-11 19:53:39.476",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# enron_dataset \u003d pd.read_csv(\u0027dataset/enron_dataset.csv\u0027)\nurl \u003d \"https://ucsd-enron-final-project.s3-us-west-1.amazonaws.com/enron_dataset_named.csv\"\nenron_dataset \u003d pd.read_csv(url)\ndisplay(enron_dataset.shape)",
      "user": "",
      "dateUpdated": "2019-07-11 19:54:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "(141, 24)",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195327_1460922111",
      "dateCreated": "2019-07-11 19:53:27.000",
      "dateStarted": "2019-07-11 19:54:59.235",
      "dateFinished": "2019-07-11 19:54:59.497",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nenron_dataset.head()",
      "user": "",
      "dateUpdated": "2019-07-11 19:55:28.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "               name    bonus  bonus-to-salary_ratio  deferral_payments  \\\n0        METTS MARK   600000               1.640294                  0   \n1     BAXTER JOHN C  1200000               4.492666            1295738   \n2    ELLIOTT STEVEN   350000               2.047490                  0   \n3  CORDES WILLIAM R        0               0.000000                  0   \n4    HANNON KEVIN P  1500000               6.165405                  0   \n\n   deferred_income  director_fees  exercised_stock_options  expenses  \\\n0                0              0                        0     94299   \n1         -1386055              0                  6680544     11200   \n2          -400729              0                  4890344     78552   \n3                0              0                   651850         0   \n4         -3117011              0                  5538001     34039   \n\n   fraction_mail_from_poi  fraction_mail_to_poi  ...  long_term_incentive  \\\n0                1.310345              0.001239  ...                    0   \n1                0.000000              0.000000  ...              1586055   \n2                0.000000              0.000000  ...                    0   \n3                0.833333              0.000000  ...                    0   \n4                1.000000              0.020096  ...              1617011   \n\n     other    poi  restricted_stock  restricted_stock_deferred  salary  \\\n0     1740  False            585062                          0  365788   \n1  2660303  False           3942714                          0  267102   \n2    12961  False           1788391                          0  170941   \n3        0  False            386335                          0       0   \n4    11350   True            853064                          0  243293   \n\n   shared_receipt_with_poi  to_messages  total_payments  total_stock_value  \n0                      702          807         1061827             585062  \n1                        0            0         5634343           10623258  \n2                        0            0          211725            6678735  \n3                       58          764               0            1038185  \n4                     1035         1045          288682            6391065  \n\n[5 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195356_1313880223",
      "dateCreated": "2019-07-11 19:53:56.000",
      "dateStarted": "2019-07-11 19:55:28.748",
      "dateFinished": "2019-07-11 19:55:28.867",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\ndata \u003d enron_dataset.iloc[:, 3:5].values  \ndata",
      "user": "",
      "dateUpdated": "2019-07-11 19:55:49.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "array([[       0,        0],\n       [ 1295738, -1386055],\n       [       0,  -400729],\n       [       0,        0],\n       [       0, -3117011],\n       [       0,        0],\n       [ 1848227,        0],\n       [       0,        0],\n       [ 2157527,  -934484],\n       [ 1130036,   -33333],\n       [ 2964506,        0],\n       [  774401,        0],\n       [       0,        0],\n       [       0,        0],\n       [  504610,        0],\n       [       0,        0],\n       [   27610,  -144062],\n       [  842924,  -719000],\n       [       0,        0],\n       [       0,   -10800],\n       [   53625,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,   -98784],\n       [ -102500,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,  -485813],\n       [       0,   -36666],\n       [       0,        0],\n       [  214678,  -100000],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,  -103750],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [    7961,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [  875307,  -775241],\n       [       0,        0],\n       [       0,   -17500],\n       [       0,        0],\n       [       0,    -5104],\n       [       0,   -25000],\n       [       0,        0],\n       [       0,        0],\n       [       0,    -4167],\n       [       0,   -25000],\n       [       0,        0],\n       [       0,   -51042],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [  181993,        0],\n       [       0,        0],\n       [  204075,        0],\n       [       0,   -38346],\n       [  202911,  -300000],\n       [       0,   -75000],\n       [   77716,        0],\n       [       0,        0],\n       [       0,        0],\n       [   73122,    -1042],\n       [  178980,        0],\n       [       0,  -280000],\n       [       0,        0],\n       [       0,        0],\n       [ 3131860,        0],\n       [       0,     -833],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [  684694,        0],\n       [ 2144013, -2334434],\n       [       0,        0],\n       [       0,        0],\n       [   16586,        0],\n       [       0, -1386055],\n       [  181755,        0],\n       [       0,  -262500],\n       [       0, -3504386],\n       [       0,        0],\n       [       0,        0],\n       [       0,   -41250],\n       [       0,        0],\n       [       0,  -101250],\n       [       0,        0],\n       [       0,        0],\n       [       0,  -113784],\n       [       0,        0],\n       [  564348,        0],\n       [   93585,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [  831299,  -583325],\n       [       0,        0],\n       [       0,        0],\n       [ 2869717, -3081055],\n       [  187469,        0],\n       [       0,   -25000],\n       [       0,   -25000],\n       [       0,        0],\n       [       0,  -125000],\n       [       0,        0],\n       [   51365,  -200000],\n       [       0,        0],\n       [       0,  -159792],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,        0],\n       [   10259,        0],\n       [       0,        0],\n       [       0, -1284000],\n       [       0,        0],\n       [       0,        0],\n       [  260455,  -201641],\n       [       0,        0],\n       [   50591,        0],\n       [       0,        0],\n       [       0,        0],\n       [       0,  -121284],\n       [       0,        0],\n       [       0,  -575000],\n       [  649584,  -694862],\n       [       0,        0],\n       [       0,  -235000],\n       [  227449,        0],\n       [       0,  -300000],\n       [       0,        0]])",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195528_1821318087",
      "dateCreated": "2019-07-11 19:55:28.000",
      "dateStarted": "2019-07-11 19:55:48.927",
      "dateFinished": "2019-07-11 19:55:49.090",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n\nimport scipy.cluster.hierarchy as shc\n\nplt.figure(figsize\u003d(146, 24))  \nplt.title(\"Hierarchical Analysis of Enron POI\")  \ndend \u003d shc.dendrogram(shc.linkage(data, method\u003d\u0027ward\u0027)) \nplt.show()",
      "user": "",
      "dateUpdated": "2019-07-11 19:56:09.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "\u003cFigure size 10512x1728 with 1 Axes\u003e\n",
            "type": "TEXT"
          },
          {
            "data": "\n",
            "type": "IMG"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195548_955111813",
      "dateCreated": "2019-07-11 19:55:48.000",
      "dateStarted": "2019-07-11 19:56:05.253",
      "dateFinished": "2019-07-11 19:56:09.596",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# K Means Backend Model\n\n# Import Dependencies\n\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.utils import shuffle",
      "user": "",
      "dateUpdated": "2019-07-11 19:57:28.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195605_1201342246",
      "dateCreated": "2019-07-11 19:56:05.000",
      "dateStarted": "2019-07-11 19:57:28.331",
      "dateFinished": "2019-07-11 19:57:28.442",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# Read pickle dataset and modify\n\n# enron_dataset \u003d pd.read_csv(\u0027dataset/enron_dataset.csv\u0027)\n# enron_modified_dataset\u003d pd.read_csv(\u0027../Resources/final_project_dataset_modified.pkl\u0027)\n\nurl \u003d \"https://ucsd-enron-final-project.s3-us-west-1.amazonaws.com/enron_dataset_named.csv\"\nenron_dataset \u003d pd.read_csv(url)\n\n# display the number of rows\ndisplay(enron_dataset.shape)",
      "user": "",
      "dateUpdated": "2019-07-11 19:58:48.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "(141, 24)",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195728_372805978",
      "dateCreated": "2019-07-11 19:57:28.000",
      "dateStarted": "2019-07-11 19:58:48.302",
      "dateFinished": "2019-07-11 19:58:48.567",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# Insert a break for each of the 141 entries\nfrom pprint import pprint\nc \u003d 0\nfor i in enron_dataset.items():\n    if c \u003c 143:\n        c +\u003d 1\n        pprint(i)\n        print(\u0027\\n\u0027)\n    else:\n        break",
      "user": "",
      "dateUpdated": "2019-07-11 19:59:08.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "(\u0027name\u0027,\n 0                METTS MARK\n1             BAXTER JOHN C\n2            ELLIOTT STEVEN\n3          CORDES WILLIAM R\n4            HANNON KEVIN P\n5       MORDAUNT KRISTINA M\n6          MEYER ROCKFORD G\n7           MCMAHON JEFFREY\n8           HAEDICKE MARK E\n9           PIPER GREGORY F\n10          HUMPHREY GENE E\n11            NOLES JAMES L\n12        BLACHMAN JEREMY M\n13             SUNDE MARTIN\n14             GIBBS DANA R\n15          LOWRY CHARLES P\n16           COLWELL WESLEY\n17            MULLER MARK S\n18       JACKSON CHARLENE R\n19       WESTFAHL RICHARD K\n20         WALTERS GARETH W\n21        WALLS JR ROBERT H\n22           KITCHEN LOUISE\n23              CHAN RONNIE\n24            BELFER ROBERT\n25       SHANKMAN JEFFREY A\n26            WODRASKA JOHN\n27     BERGSIEKER RICHARD P\n28          URQUHART JOHN A\n29          BIBI PHILIPPE A\n               ...         \n111        MCCLELLAN GEORGE\n112          HUGHES JAMES A\n113       REYNOLDS LAWRENCE\n114        PICKERING MARK R\n115        CARTER REBECCA C\n116       BUCHANAN HAROLD G\n117               YEAP SOON\n118          MURRAY JULIA H\n119         GARLAND C KEVIN\n120            DODSON KEITH\n121          YEAGER F SCOTT\n122            HIRKO JOSEPH\n123        DIETRICH JANET R\n124     DERRICK JR. JAMES V\n125               PAI LOU L\n126     HAYSLETT RODERICK J\n127          BAY FRANKLIN R\n128         MCCARTY DANNY J\n129             FUGH JOHN L\n130       SCRIMSHAW MATTHEW\n131           KOENIG MARK E\n132            SAVAGE FRANK\n133         IZZO LAWRENCE L\n134      TILNEY ELIZABETH A\n135           BUY RICHARD B\n136           GRAMM WENDY L\n137        CAUSEY RICHARD A\n138       TAYLOR MITCHELL S\n139    DONAHUE JR JEFFREY M\n140         GLISAN JR BEN F\nName: name, Length: 141, dtype: object)\n\n\n(\u0027bonus\u0027,\n 0       600000\n1      1200000\n2       350000\n3            0\n4      1500000\n5       325000\n6            0\n7      2600000\n8      1150000\n9       400000\n10           0\n11           0\n12      850000\n13      700000\n14           0\n15           0\n16     1200000\n17     1100000\n18      250000\n19           0\n20           0\n21      850000\n22     3100000\n23           0\n24           0\n25     2000000\n26           0\n27      250000\n28           0\n29     1000000\n        ...   \n111     900000\n112          0\n113     100000\n114     300000\n115     300000\n116     500000\n117          0\n118     400000\n119     850000\n120      70000\n121          0\n122          0\n123     600000\n124     800000\n125    1000000\n126          0\n127     400000\n128          0\n129          0\n130          0\n131     700000\n132          0\n133          0\n134     300000\n135     900000\n136          0\n137    1000000\n138     600000\n139     800000\n140     600000\nName: bonus, Length: 141, dtype: int64)\n\n\n(\u0027bonus-to-salary_ratio\u0027,\n 0       1.640294\n1       4.492666\n2       2.047490\n3       0.000000\n4       6.165405\n5       1.216805\n6       0.000000\n7       7.018529\n8       3.073839\n9       2.029519\n10      0.000000\n11      0.000000\n12      3.419890\n13      2.718594\n14      0.000000\n15      0.000000\n16      4.158840\n17      4.371081\n18      0.866377\n19      0.000000\n20      0.000000\n21      2.380346\n22     11.420488\n23      0.000000\n24      0.000000\n25      6.576568\n26      0.000000\n27      1.330339\n28      0.000000\n29      4.681100\n         ...    \n111     3.416688\n112     0.000000\n113     1.308918\n114     0.457989\n115     1.145874\n116     2.015991\n117     0.000000\n118     1.744561\n119     3.664646\n120     0.316738\n121     0.000000\n122     0.000000\n123     2.399040\n124     1.624778\n125     3.818557\n126     0.000000\n127     1.668955\n128     0.000000\n129     0.000000\n130     0.000000\n131     2.258458\n132     0.000000\n133     0.000000\n134     1.212915\n135     2.722768\n136     0.000000\n137     2.408542\n138     2.262324\n139     2.871490\n140     2.182017\nName: bonus-to-salary_ratio, Length: 141, dtype: float64)\n\n\n(\u0027deferral_payments\u0027,\n 0            0\n1      1295738\n2            0\n3            0\n4            0\n5            0\n6      1848227\n7            0\n8      2157527\n9      1130036\n10     2964506\n11      774401\n12           0\n13           0\n14      504610\n15           0\n16       27610\n17      842924\n18           0\n19           0\n20       53625\n21           0\n22           0\n23           0\n24     -102500\n25           0\n26           0\n27           0\n28           0\n29           0\n        ...   \n111          0\n112          0\n113      51365\n114          0\n115          0\n116          0\n117          0\n118          0\n119          0\n120          0\n121          0\n122      10259\n123          0\n124          0\n125          0\n126          0\n127     260455\n128          0\n129      50591\n130          0\n131          0\n132          0\n133          0\n134          0\n135     649584\n136          0\n137          0\n138     227449\n139          0\n140          0\nName: deferral_payments, Length: 141, dtype: int64)\n\n\n(\u0027deferred_income\u0027,\n 0            0\n1     -1386055\n2      -400729\n3            0\n4     -3117011\n5            0\n6            0\n7            0\n8      -934484\n9       -33333\n10           0\n11           0\n12           0\n13           0\n14           0\n15           0\n16     -144062\n17     -719000\n18           0\n19      -10800\n20           0\n21           0\n22           0\n23      -98784\n24           0\n25           0\n26           0\n27     -485813\n28      -36666\n29           0\n        ...   \n111    -125000\n112          0\n113    -200000\n114          0\n115    -159792\n116          0\n117          0\n118          0\n119          0\n120          0\n121          0\n122          0\n123          0\n124   -1284000\n125          0\n126          0\n127    -201641\n128          0\n129          0\n130          0\n131          0\n132    -121284\n133          0\n134    -575000\n135    -694862\n136          0\n137    -235000\n138          0\n139    -300000\n140          0\nName: deferred_income, Length: 141, dtype: int64)\n\n\n(\u0027director_fees\u0027,\n 0           0\n1           0\n2           0\n3           0\n4           0\n5           0\n6           0\n7           0\n8           0\n9           0\n10          0\n11          0\n12          0\n13          0\n14          0\n15          0\n16          0\n17          0\n18          0\n19          0\n20          0\n21          0\n22          0\n23      98784\n24       3285\n25          0\n26          0\n27          0\n28      36666\n29          0\n        ...  \n111         0\n112         0\n113         0\n114         0\n115         0\n116         0\n117         0\n118         0\n119         0\n120         0\n121         0\n122         0\n123         0\n124         0\n125         0\n126         0\n127         0\n128         0\n129         0\n130         0\n131         0\n132    125034\n133         0\n134         0\n135         0\n136    119292\n137         0\n138         0\n139         0\n140         0\nName: director_fees, Length: 141, dtype: int64)\n\n\n(\u0027exercised_stock_options\u0027,\n 0             0\n1       6680544\n2       4890344\n3        651850\n4       5538001\n5             0\n6        493489\n7       1104054\n8        608750\n9        880290\n10      2282768\n11            0\n12       765313\n13            0\n14      2218275\n15       372205\n16            0\n17      1056320\n18       185063\n19            0\n20      1030329\n21      4346544\n22        81042\n23            0\n24         3285\n25      1441898\n26            0\n27            0\n28            0\n29      1465734\n         ...   \n111      506765\n112      754966\n113     4160672\n114       28798\n115           0\n116      825464\n117      192758\n118      400478\n119      636246\n120           0\n121     8308552\n122    30766064\n123     1550019\n124     8831913\n125    15364167\n126           0\n127           0\n128      664375\n129      176378\n130      759557\n131      671737\n132           0\n133     2165172\n134      591250\n135     2542813\n136           0\n137           0\n138     3181250\n139      765920\n140      384728\nName: exercised_stock_options, Length: 141, dtype: int64)\n\n\n(\u0027expenses\u0027,\n 0       94299\n1       11200\n2       78552\n3           0\n4       34039\n5       35018\n6           0\n7      137108\n8       76169\n9       43057\n10       4994\n11          0\n12      84208\n13          0\n14          0\n15          0\n16      16514\n17          0\n18      10181\n19      51870\n20      33785\n21      50936\n22       5774\n23          0\n24          0\n25     178979\n26          0\n27      59175\n28     228656\n29      38559\n        ...  \n111    228763\n112         0\n113      8409\n114     31653\n115         0\n116       600\n117     55097\n118     57580\n119     48405\n120     28164\n121     53947\n122     77978\n123      3475\n124     51124\n125     32047\n126         0\n127    129142\n128         0\n129         0\n130         0\n131    127017\n132         0\n133     28093\n134         0\n135         0\n136         0\n137     30674\n138         0\n139     96268\n140    125978\nName: expenses, Length: 141, dtype: int64)\n\n\n(\u0027fraction_mail_from_poi\u0027,\n 0      1.310345\n1      0.000000\n2      0.000000\n3      0.833333\n4      1.000000\n5      0.000000\n6      0.000000\n7      1.208333\n8      0.092736\n9      0.274775\n10     0.588235\n11     0.000000\n12     1.785714\n13     0.973684\n14     0.000000\n15     0.000000\n16     6.000000\n17     0.750000\n18     0.446429\n19     0.000000\n20     0.000000\n21     0.116438\n22     0.145255\n23     0.000000\n24     0.000000\n25     0.035062\n26     0.000000\n27     0.067797\n28     0.000000\n29     0.575000\n         ...   \n111    1.061224\n112    1.029412\n113    0.000000\n114    0.104478\n115    1.933333\n116    0.000000\n117    0.000000\n118    0.244444\n119    0.227273\n120    0.714286\n121    0.000000\n122    0.000000\n123    4.841270\n124    0.070407\n125    0.000000\n126    0.032988\n127    0.000000\n128    0.116279\n129    0.000000\n130    0.000000\n131    0.868852\n132    0.000000\n133    1.473684\n134    0.526316\n135    0.148148\n136    0.000000\n137    1.183673\n138    0.000000\n139    8.545455\n140    3.250000\nName: fraction_mail_from_poi, Length: 141, dtype: float64)\n\n\n(\u0027fraction_mail_to_poi\u0027,\n 0      0.001239\n1      0.000000\n2      0.000000\n3      0.000000\n4      0.020096\n5      0.000000\n6      0.000000\n7      0.011040\n8      0.015216\n9      0.038772\n10     0.132812\n11     0.000000\n12     0.000808\n13     0.004911\n14     0.000000\n15     0.000000\n16     0.006257\n17     0.000000\n18     0.073643\n19     0.000000\n20     0.000000\n21     0.000000\n22     0.023359\n23     0.000000\n24     0.000000\n25     0.025768\n26     0.000000\n27     0.000000\n28     0.000000\n29     0.004978\n         ...   \n111    0.000000\n112    0.006954\n113    0.000000\n114    0.000000\n115    0.022436\n116    0.000000\n117    0.000000\n118    0.000912\n119    0.129187\n120    0.017045\n121    0.000000\n122    0.000000\n123    0.005443\n124    0.009170\n125    0.000000\n126    0.014345\n127    0.000000\n128    0.001396\n129    0.000000\n130    0.000000\n131    0.006318\n132    0.000000\n133    0.010081\n134    0.023913\n135    0.020153\n136    0.000000\n137    0.006342\n138    0.000000\n139    0.012717\n140    0.006873\nName: fraction_mail_to_poi, Length: 141, dtype: float64)\n\n\n(\u0027from_messages\u0027,\n 0        29\n1         0\n2         0\n3        12\n4        32\n5         0\n6        28\n7        48\n8      1941\n9       222\n10       17\n11        0\n12       14\n13       38\n14       12\n15        0\n16       40\n17       16\n18       56\n19        0\n20        0\n21      146\n22     1728\n23        0\n24        0\n25     2681\n26        0\n27       59\n28        0\n29       40\n       ... \n111      49\n112      34\n113       0\n114      67\n115      15\n116     125\n117       0\n118      45\n119      44\n120      14\n121       0\n122       0\n123      63\n124     909\n125       0\n126    1061\n127       0\n128     215\n129       0\n130       0\n131      61\n132       0\n133      19\n134      19\n135    1053\n136       0\n137      49\n138      29\n139      22\n140      16\nName: from_messages, Length: 141, dtype: int64)\n\n\n(\u0027from_poi_to_this_person\u0027,\n 0       38\n1        0\n2        0\n3       10\n4       32\n5        0\n6        0\n7       58\n8      180\n9       61\n10      10\n11       0\n12      25\n13      37\n14       0\n15       0\n16     240\n17      12\n18      25\n19       0\n20       0\n21      17\n22     251\n23       0\n24       0\n25      94\n26       0\n27       4\n28       0\n29      23\n      ... \n111     52\n112     35\n113      0\n114      7\n115     29\n116      0\n117      0\n118     11\n119     10\n120     10\n121      0\n122      0\n123    305\n124     64\n125      0\n126     35\n127      0\n128     25\n129      0\n130      0\n131     53\n132      0\n133     28\n134     10\n135    156\n136      0\n137     58\n138      0\n139    188\n140     52\nName: from_poi_to_this_person, Length: 141, dtype: int64)\n\n\n(\u0027from_this_person_to_poi\u0027,\n 0        1\n1        0\n2        0\n3        0\n4       21\n5        0\n6        0\n7       26\n8       61\n9       48\n10      17\n11       0\n12       2\n13      13\n14       0\n15       0\n16      11\n17       0\n18      19\n19       0\n20       0\n21       0\n22     194\n23       0\n24       0\n25      83\n26       0\n27       0\n28       0\n29       8\n      ... \n111      0\n112      5\n113      0\n114      0\n115      7\n116      0\n117      0\n118      2\n119     27\n120      3\n121      0\n122      0\n123     14\n124     20\n125      0\n126     38\n127      0\n128      2\n129      0\n130      0\n131     15\n132      0\n133      5\n134     11\n135     71\n136      0\n137     12\n138      0\n139     11\n140      6\nName: from_this_person_to_poi, Length: 141, dtype: int64)\n\n\n(\u0027loan_advances\u0027,\n 0           0\n1           0\n2           0\n3           0\n4           0\n5           0\n6           0\n7           0\n8           0\n9           0\n10          0\n11          0\n12          0\n13          0\n14          0\n15          0\n16          0\n17          0\n18          0\n19          0\n20          0\n21          0\n22          0\n23          0\n24          0\n25          0\n26          0\n27          0\n28          0\n29          0\n        ...  \n111         0\n112         0\n113         0\n114    400000\n115         0\n116         0\n117         0\n118         0\n119         0\n120         0\n121         0\n122         0\n123         0\n124         0\n125         0\n126         0\n127         0\n128         0\n129         0\n130         0\n131         0\n132         0\n133         0\n134         0\n135         0\n136         0\n137         0\n138         0\n139         0\n140         0\nName: loan_advances, Length: 141, dtype: int64)\n\n\n(\u0027long_term_incentive\u0027,\n 0            0\n1      1586055\n2            0\n3            0\n4      1617011\n5            0\n6            0\n7       694862\n8       983346\n9            0\n10           0\n11           0\n12      831809\n13      476451\n14      461912\n15           0\n16           0\n17     1725545\n18           0\n19      256191\n20           0\n21      540751\n22           0\n23           0\n24           0\n25      554422\n26           0\n27      180250\n28           0\n29      369721\n        ...   \n111          0\n112          0\n113     156250\n114          0\n115      75000\n116     304805\n117          0\n118     125000\n119     375304\n120          0\n121          0\n122          0\n123     556416\n124     484000\n125          0\n126          0\n127          0\n128          0\n129          0\n130          0\n131     300000\n132          0\n133     312500\n134     275000\n135     769862\n136          0\n137     350000\n138          0\n139          0\n140      71023\nName: long_term_incentive, Length: 141, dtype: int64)\n\n\n(\u0027other\u0027,\n 0         1740\n1      2660303\n2        12961\n3            0\n4        11350\n5         1411\n6            0\n7       297353\n8        52382\n9          778\n10           0\n11           0\n12         272\n13      111122\n14           0\n15           0\n16      101740\n17         947\n18        2435\n19      401130\n20           0\n21           2\n22       93925\n23           0\n24           0\n25        1191\n26      189583\n27      427316\n28           0\n29      425688\n        ...   \n111      51587\n112          0\n113     202052\n114          0\n115        540\n116       1215\n117          0\n118        330\n119      60814\n120        774\n121     147950\n122       2856\n123        473\n124       7482\n125    1829457\n126          0\n127         69\n128          0\n129          0\n130          0\n131     150458\n132          0\n133    1553729\n134     152055\n135     400572\n136          0\n137     307895\n138          0\n139        891\n140     200308\nName: other, Length: 141, dtype: int64)\n\n\n(\u0027poi\u0027,\n 0      False\n1      False\n2      False\n3      False\n4       True\n5      False\n6      False\n7      False\n8      False\n9      False\n10     False\n11     False\n12     False\n13     False\n14     False\n15     False\n16      True\n17     False\n18     False\n19     False\n20     False\n21     False\n22     False\n23     False\n24     False\n25     False\n26     False\n27     False\n28     False\n29     False\n       ...  \n111    False\n112    False\n113    False\n114    False\n115    False\n116    False\n117    False\n118    False\n119    False\n120    False\n121     True\n122     True\n123    False\n124    False\n125    False\n126    False\n127    False\n128    False\n129    False\n130    False\n131     True\n132    False\n133    False\n134    False\n135    False\n136    False\n137     True\n138    False\n139    False\n140     True\nName: poi, Length: 141, dtype: bool)\n\n\n(\u0027restricted_stock\u0027,\n 0       585062\n1      3942714\n2      1788391\n3       386335\n4       853064\n5       208510\n6       462384\n7       558801\n8       524169\n9       409554\n10           0\n11      463261\n12      189041\n13      698920\n14           0\n15      153686\n16      698242\n17      360528\n18      540672\n19      384930\n20           0\n21     1552453\n22      466101\n23       32460\n24           0\n25      630137\n26           0\n27      659249\n28           0\n29      378082\n        ...   \n111     441096\n112     363428\n113     201483\n114          0\n115     307301\n116     189041\n117          0\n118     196983\n119     259907\n120          0\n121    3576206\n122          0\n123     315068\n124    1787380\n125    8453763\n126     346663\n127     145796\n128      94556\n129          0\n130          0\n131    1248318\n132          0\n133    3654808\n134     576792\n135     901657\n136          0\n137    2502063\n138     563798\n139     315068\n140     393818\nName: restricted_stock, Length: 141, dtype: int64)\n\n\n(\u0027restricted_stock_deferred\u0027,\n 0            0\n1            0\n2            0\n3            0\n4            0\n5            0\n6            0\n7            0\n8      -329825\n9      -409554\n10           0\n11      -94556\n12           0\n13           0\n14           0\n15     -153686\n16           0\n17           0\n18           0\n19           0\n20           0\n21           0\n22           0\n23      -32460\n24       44093\n25           0\n26           0\n27           0\n28           0\n29           0\n        ...   \n111          0\n112          0\n113    -140264\n114          0\n115    -307301\n116          0\n117          0\n118          0\n119          0\n120          0\n121          0\n122          0\n123          0\n124   -1787380\n125          0\n126          0\n127     -82782\n128          0\n129          0\n130          0\n131          0\n132          0\n133          0\n134          0\n135          0\n136          0\n137          0\n138          0\n139          0\n140          0\nName: restricted_stock_deferred, Length: 141, dtype: int64)\n\n\n(\u0027salary\u0027,\n 0      365788\n1      267102\n2      170941\n3           0\n4      243293\n5      267093\n6           0\n7      370448\n8      374125\n9      197091\n10     130724\n11          0\n12     248546\n13     257486\n14          0\n15          0\n16     288542\n17     251654\n18     288558\n19      63744\n20          0\n21     357091\n22     271442\n23          0\n24          0\n25     304110\n26          0\n27     187922\n28          0\n29     213625\n        ...  \n111    263413\n112         0\n113     76399\n114    655037\n115    261809\n116    248017\n117         0\n118    229284\n119    231946\n120    221003\n121    158403\n122         0\n123    250100\n124    492375\n125    261879\n126         0\n127    239671\n128         0\n129         0\n130         0\n131    309946\n132         0\n133     85274\n134    247338\n135    330546\n136         0\n137    415189\n138    265214\n139    278601\n140    274975\nName: salary, Length: 141, dtype: int64)\n\n\n(\u0027shared_receipt_with_poi\u0027,\n 0       702\n1         0\n2         0\n3        58\n4      1035\n5         0\n6        22\n7      2228\n8      1847\n9       742\n10      119\n11        0\n12     2326\n13     2565\n14       23\n15        0\n16     1132\n17      114\n18      117\n19        0\n20        0\n21      215\n22     3669\n23        0\n24        0\n25     1730\n26        0\n27      233\n28        0\n29     1336\n       ... \n111    1469\n112     589\n113       0\n114     728\n115     196\n116      23\n117       0\n118     395\n119     178\n120     114\n121       0\n122       0\n123    1902\n124    1401\n125       0\n126     571\n127       0\n128     508\n129       0\n130       0\n131    2271\n132       0\n133     437\n134     379\n135    2333\n136       0\n137    1585\n138     300\n139     772\n140     874\nName: shared_receipt_with_poi, Length: 141, dtype: int64)\n\n\n(\u0027to_messages\u0027,\n 0       807\n1         0\n2         0\n3       764\n4      1045\n5         0\n6       232\n7      2355\n8      4009\n9      1238\n10      128\n11        0\n12     2475\n13     2647\n14      169\n15        0\n16     1758\n17      136\n18      258\n19        0\n20        0\n21      671\n22     8305\n23        0\n24        0\n25     3221\n26        0\n27      383\n28        0\n29     1607\n       ... \n111    1744\n112     719\n113       0\n114     898\n115     312\n116    1088\n117       0\n118    2192\n119     209\n120     176\n121       0\n122       0\n123    2572\n124    2181\n125       0\n126    2649\n127       0\n128    1433\n129       0\n130       0\n131    2374\n132       0\n133     496\n134     460\n135    3523\n136       0\n137    1892\n138     533\n139     865\n140     873\nName: to_messages, Length: 141, dtype: int64)\n\n\n(\u0027total_payments\u0027,\n 0      1061827\n1      5634343\n2       211725\n3            0\n4       288682\n5       628522\n6      1848227\n7      4099771\n8      3859065\n9      1737629\n10     3100224\n11      774401\n12     2014835\n13     1545059\n14      966522\n15           0\n16     1490344\n17     3202070\n18      551174\n19      762135\n20       87410\n21     1798780\n22     3471141\n23           0\n24      102500\n25     3038702\n26      189583\n27      618850\n28      228656\n29     2047593\n        ...   \n111    1318763\n112          0\n113     394475\n114    1386690\n115     477557\n116    1054637\n117      55097\n118     812194\n119    1566469\n120     319941\n121     360300\n122      91093\n123    1410464\n124     550981\n125    3123383\n126          0\n127     827696\n128          0\n129      50591\n130          0\n131    1587421\n132       3750\n133    1979596\n134     399393\n135    2355702\n136     119292\n137    1868758\n138    1092663\n139     875760\n140    1272284\nName: total_payments, Length: 141, dtype: int64)\n\n\n(\u0027total_stock_value\u0027,\n 0        585062\n1      10623258\n2       6678735\n3       1038185\n4       6391065\n5        208510\n6        955873\n7       1662855\n8        803094\n9        880290\n10      2282768\n11       368705\n12       954354\n13       698920\n14      2218275\n15       372205\n16       698242\n17      1416848\n18       725735\n19       384930\n20      1030329\n21      5898997\n22       547143\n23            0\n24       -44093\n25      2072035\n26            0\n27       659249\n28            0\n29      1843816\n         ...   \n111      947861\n112     1118394\n113     4221891\n114       28798\n115           0\n116     1014505\n117      192758\n118      597461\n119      896153\n120           0\n121    11884758\n122    30766064\n123     1865087\n124     8831913\n125    23817930\n126      346663\n127       63014\n128      758931\n129      176378\n130      759557\n131     1920055\n132           0\n133     5819980\n134     1168042\n135     3444470\n136           0\n137     2502063\n138     3745048\n139     1080988\n140      778546\nName: total_stock_value, Length: 141, dtype: int64)\n\n\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195848_1533538062",
      "dateCreated": "2019-07-11 19:58:48.000",
      "dateStarted": "2019-07-11 19:59:07.953",
      "dateFinished": "2019-07-11 19:59:08.143",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nfeatures_list \u003d [\u0027poi\u0027, \u0027salary\u0027, \u0027bonus\u0027, \u0027long_term_incentive\u0027, \u0027bonus-to-salary_ratio\u0027, \u0027deferral_payments\u0027, \u0027expenses\u0027,\n                 \u0027restricted_stock_deferred\u0027, \u0027restricted_stock\u0027, \u0027deferred_income\u0027,\u0027fraction_mail_from_poi\u0027, \u0027total_payments\u0027,\n                 \u0027other\u0027, \u0027fraction_mail_to_poi\u0027, \u0027from_poi_to_this_person\u0027, \u0027from_this_person_to_poi\u0027, \u0027to_messages\u0027,\n                 \u0027from_messages\u0027, \u0027shared_receipt_with_poi\u0027, \u0027loan_advances\u0027, \u0027director_fees\u0027, \u0027exercised_stock_options\u0027,\n                \u0027total_stock_value\u0027, \u0027restricted_stock\u0027]",
      "user": "",
      "dateUpdated": "2019-07-11 19:59:42.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195907_1444348679",
      "dateCreated": "2019-07-11 19:59:07.000",
      "dateStarted": "2019-07-11 19:59:42.125",
      "dateFinished": "2019-07-11 19:59:42.236",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nenron_df \u003d pd.DataFrame(enron_dataset)\n\n# create a header variable from the first column of the dataset\nheader \u003d enron_df.iloc[0]\nheader",
      "user": "",
      "dateUpdated": "2019-07-11 19:59:56.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "name                         METTS MARK\nbonus                            600000\nbonus-to-salary_ratio           1.64029\ndeferral_payments                     0\ndeferred_income                       0\ndirector_fees                         0\nexercised_stock_options               0\nexpenses                          94299\nfraction_mail_from_poi          1.31034\nfraction_mail_to_poi         0.00123916\nfrom_messages                        29\nfrom_poi_to_this_person              38\nfrom_this_person_to_poi               1\nloan_advances                         0\nlong_term_incentive                   0\nother                              1740\npoi                               False\nrestricted_stock                 585062\nrestricted_stock_deferred             0\nsalary                           365788\nshared_receipt_with_poi             702\nto_messages                         807\ntotal_payments                  1061827\ntotal_stock_value                585062\nName: 0, dtype: object",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195942_1500285448",
      "dateCreated": "2019-07-11 19:59:42.000",
      "dateStarted": "2019-07-11 19:59:56.745",
      "dateFinished": "2019-07-11 19:59:56.903",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nenron_df.describe()\nnames_df \u003d enron_df[\u0027Unnamed: 0\u0027]\nenron_df \u003d enron_df.drop([\u0027Unnamed: 0\u0027], axis\u003d1)",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:48.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-195956_551784531",
      "dateCreated": "2019-07-11 19:59:56.000",
      "dateStarted": "2019-07-11 20:00:11.611",
      "dateFinished": "2019-07-11 20:00:11.824",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n## Store the target value\nclasses \u003d enron_df[\u0027poi\u0027]\nclasses.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:00:37.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "0    False\n1    False\n2    False\n3    False\n4     True\nName: poi, dtype: bool",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200011_334857590",
      "dateCreated": "2019-07-11 20:00:11.000",
      "dateStarted": "2019-07-11 20:00:37.396",
      "dateFinished": "2019-07-11 20:00:37.507",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# Count the amount of true vs false POIs\nenron_df[\u0027poi\u0027].value_counts()",
      "user": "",
      "dateUpdated": "2019-07-11 20:00:50.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "False    123\nTrue      18\nName: poi, dtype: int64",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200037_2147607",
      "dateCreated": "2019-07-11 20:00:37.000",
      "dateStarted": "2019-07-11 20:00:50.641",
      "dateFinished": "2019-07-11 20:00:50.753",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n## Drop the Class values from data\ndf_no_poi \u003d enron_df.drop([\u0027poi\u0027],axis\u003d1) \ndf_no_poi",
      "user": "",
      "dateUpdated": "2019-07-11 20:01:05.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                     name    bonus  bonus-to-salary_ratio  deferral_payments  \\\n0              METTS MARK   600000               1.640294                  0   \n1           BAXTER JOHN C  1200000               4.492666            1295738   \n2          ELLIOTT STEVEN   350000               2.047490                  0   \n3        CORDES WILLIAM R        0               0.000000                  0   \n4          HANNON KEVIN P  1500000               6.165405                  0   \n5     MORDAUNT KRISTINA M   325000               1.216805                  0   \n6        MEYER ROCKFORD G        0               0.000000            1848227   \n7         MCMAHON JEFFREY  2600000               7.018529                  0   \n8         HAEDICKE MARK E  1150000               3.073839            2157527   \n9         PIPER GREGORY F   400000               2.029519            1130036   \n10        HUMPHREY GENE E        0               0.000000            2964506   \n11          NOLES JAMES L        0               0.000000             774401   \n12      BLACHMAN JEREMY M   850000               3.419890                  0   \n13           SUNDE MARTIN   700000               2.718594                  0   \n14           GIBBS DANA R        0               0.000000             504610   \n15        LOWRY CHARLES P        0               0.000000                  0   \n16         COLWELL WESLEY  1200000               4.158840              27610   \n17          MULLER MARK S  1100000               4.371081             842924   \n18     JACKSON CHARLENE R   250000               0.866377                  0   \n19     WESTFAHL RICHARD K        0               0.000000                  0   \n20       WALTERS GARETH W        0               0.000000              53625   \n21      WALLS JR ROBERT H   850000               2.380346                  0   \n22         KITCHEN LOUISE  3100000              11.420488                  0   \n23            CHAN RONNIE        0               0.000000                  0   \n24          BELFER ROBERT        0               0.000000            -102500   \n25     SHANKMAN JEFFREY A  2000000               6.576568                  0   \n26          WODRASKA JOHN        0               0.000000                  0   \n27   BERGSIEKER RICHARD P   250000               1.330339                  0   \n28        URQUHART JOHN A        0               0.000000                  0   \n29        BIBI PHILIPPE A  1000000               4.681100                  0   \n..                    ...      ...                    ...                ...   \n111      MCCLELLAN GEORGE   900000               3.416688                  0   \n112        HUGHES JAMES A        0               0.000000                  0   \n113     REYNOLDS LAWRENCE   100000               1.308918              51365   \n114      PICKERING MARK R   300000               0.457989                  0   \n115      CARTER REBECCA C   300000               1.145874                  0   \n116     BUCHANAN HAROLD G   500000               2.015991                  0   \n117             YEAP SOON        0               0.000000                  0   \n118        MURRAY JULIA H   400000               1.744561                  0   \n119       GARLAND C KEVIN   850000               3.664646                  0   \n120          DODSON KEITH    70000               0.316738                  0   \n121        YEAGER F SCOTT        0               0.000000                  0   \n122          HIRKO JOSEPH        0               0.000000              10259   \n123      DIETRICH JANET R   600000               2.399040                  0   \n124   DERRICK JR. JAMES V   800000               1.624778                  0   \n125             PAI LOU L  1000000               3.818557                  0   \n126   HAYSLETT RODERICK J        0               0.000000                  0   \n127        BAY FRANKLIN R   400000               1.668955             260455   \n128       MCCARTY DANNY J        0               0.000000                  0   \n129           FUGH JOHN L        0               0.000000              50591   \n130     SCRIMSHAW MATTHEW        0               0.000000                  0   \n131         KOENIG MARK E   700000               2.258458                  0   \n132          SAVAGE FRANK        0               0.000000                  0   \n133       IZZO LAWRENCE L        0               0.000000                  0   \n134    TILNEY ELIZABETH A   300000               1.212915                  0   \n135         BUY RICHARD B   900000               2.722768             649584   \n136         GRAMM WENDY L        0               0.000000                  0   \n137      CAUSEY RICHARD A  1000000               2.408542                  0   \n138     TAYLOR MITCHELL S   600000               2.262324             227449   \n139  DONAHUE JR JEFFREY M   800000               2.871490                  0   \n140       GLISAN JR BEN F   600000               2.182017                  0   \n\n     deferred_income  director_fees  exercised_stock_options  expenses  \\\n0                  0              0                        0     94299   \n1           -1386055              0                  6680544     11200   \n2            -400729              0                  4890344     78552   \n3                  0              0                   651850         0   \n4           -3117011              0                  5538001     34039   \n5                  0              0                        0     35018   \n6                  0              0                   493489         0   \n7                  0              0                  1104054    137108   \n8            -934484              0                   608750     76169   \n9             -33333              0                   880290     43057   \n10                 0              0                  2282768      4994   \n11                 0              0                        0         0   \n12                 0              0                   765313     84208   \n13                 0              0                        0         0   \n14                 0              0                  2218275         0   \n15                 0              0                   372205         0   \n16           -144062              0                        0     16514   \n17           -719000              0                  1056320         0   \n18                 0              0                   185063     10181   \n19            -10800              0                        0     51870   \n20                 0              0                  1030329     33785   \n21                 0              0                  4346544     50936   \n22                 0              0                    81042      5774   \n23            -98784          98784                        0         0   \n24                 0           3285                     3285         0   \n25                 0              0                  1441898    178979   \n26                 0              0                        0         0   \n27           -485813              0                        0     59175   \n28            -36666          36666                        0    228656   \n29                 0              0                  1465734     38559   \n..               ...            ...                      ...       ...   \n111          -125000              0                   506765    228763   \n112                0              0                   754966         0   \n113          -200000              0                  4160672      8409   \n114                0              0                    28798     31653   \n115          -159792              0                        0         0   \n116                0              0                   825464       600   \n117                0              0                   192758     55097   \n118                0              0                   400478     57580   \n119                0              0                   636246     48405   \n120                0              0                        0     28164   \n121                0              0                  8308552     53947   \n122                0              0                 30766064     77978   \n123                0              0                  1550019      3475   \n124         -1284000              0                  8831913     51124   \n125                0              0                 15364167     32047   \n126                0              0                        0         0   \n127          -201641              0                        0    129142   \n128                0              0                   664375         0   \n129                0              0                   176378         0   \n130                0              0                   759557         0   \n131                0              0                   671737    127017   \n132          -121284         125034                        0         0   \n133                0              0                  2165172     28093   \n134          -575000              0                   591250         0   \n135          -694862              0                  2542813         0   \n136                0         119292                        0         0   \n137          -235000              0                        0     30674   \n138                0              0                  3181250         0   \n139          -300000              0                   765920     96268   \n140                0              0                   384728    125978   \n\n     fraction_mail_from_poi  fraction_mail_to_poi  ...  loan_advances  \\\n0                  1.310345              0.001239  ...              0   \n1                  0.000000              0.000000  ...              0   \n2                  0.000000              0.000000  ...              0   \n3                  0.833333              0.000000  ...              0   \n4                  1.000000              0.020096  ...              0   \n5                  0.000000              0.000000  ...              0   \n6                  0.000000              0.000000  ...              0   \n7                  1.208333              0.011040  ...              0   \n8                  0.092736              0.015216  ...              0   \n9                  0.274775              0.038772  ...              0   \n10                 0.588235              0.132812  ...              0   \n11                 0.000000              0.000000  ...              0   \n12                 1.785714              0.000808  ...              0   \n13                 0.973684              0.004911  ...              0   \n14                 0.000000              0.000000  ...              0   \n15                 0.000000              0.000000  ...              0   \n16                 6.000000              0.006257  ...              0   \n17                 0.750000              0.000000  ...              0   \n18                 0.446429              0.073643  ...              0   \n19                 0.000000              0.000000  ...              0   \n20                 0.000000              0.000000  ...              0   \n21                 0.116438              0.000000  ...              0   \n22                 0.145255              0.023359  ...              0   \n23                 0.000000              0.000000  ...              0   \n24                 0.000000              0.000000  ...              0   \n25                 0.035062              0.025768  ...              0   \n26                 0.000000              0.000000  ...              0   \n27                 0.067797              0.000000  ...              0   \n28                 0.000000              0.000000  ...              0   \n29                 0.575000              0.004978  ...              0   \n..                      ...                   ...  ...            ...   \n111                1.061224              0.000000  ...              0   \n112                1.029412              0.006954  ...              0   \n113                0.000000              0.000000  ...              0   \n114                0.104478              0.000000  ...         400000   \n115                1.933333              0.022436  ...              0   \n116                0.000000              0.000000  ...              0   \n117                0.000000              0.000000  ...              0   \n118                0.244444              0.000912  ...              0   \n119                0.227273              0.129187  ...              0   \n120                0.714286              0.017045  ...              0   \n121                0.000000              0.000000  ...              0   \n122                0.000000              0.000000  ...              0   \n123                4.841270              0.005443  ...              0   \n124                0.070407              0.009170  ...              0   \n125                0.000000              0.000000  ...              0   \n126                0.032988              0.014345  ...              0   \n127                0.000000              0.000000  ...              0   \n128                0.116279              0.001396  ...              0   \n129                0.000000              0.000000  ...              0   \n130                0.000000              0.000000  ...              0   \n131                0.868852              0.006318  ...              0   \n132                0.000000              0.000000  ...              0   \n133                1.473684              0.010081  ...              0   \n134                0.526316              0.023913  ...              0   \n135                0.148148              0.020153  ...              0   \n136                0.000000              0.000000  ...              0   \n137                1.183673              0.006342  ...              0   \n138                0.000000              0.000000  ...              0   \n139                8.545455              0.012717  ...              0   \n140                3.250000              0.006873  ...              0   \n\n     long_term_incentive    other  restricted_stock  \\\n0                      0     1740            585062   \n1                1586055  2660303           3942714   \n2                      0    12961           1788391   \n3                      0        0            386335   \n4                1617011    11350            853064   \n5                      0     1411            208510   \n6                      0        0            462384   \n7                 694862   297353            558801   \n8                 983346    52382            524169   \n9                      0      778            409554   \n10                     0        0                 0   \n11                     0        0            463261   \n12                831809      272            189041   \n13                476451   111122            698920   \n14                461912        0                 0   \n15                     0        0            153686   \n16                     0   101740            698242   \n17               1725545      947            360528   \n18                     0     2435            540672   \n19                256191   401130            384930   \n20                     0        0                 0   \n21                540751        2           1552453   \n22                     0    93925            466101   \n23                     0        0             32460   \n24                     0        0                 0   \n25                554422     1191            630137   \n26                     0   189583                 0   \n27                180250   427316            659249   \n28                     0        0                 0   \n29                369721   425688            378082   \n..                   ...      ...               ...   \n111                    0    51587            441096   \n112                    0        0            363428   \n113               156250   202052            201483   \n114                    0        0                 0   \n115                75000      540            307301   \n116               304805     1215            189041   \n117                    0        0                 0   \n118               125000      330            196983   \n119               375304    60814            259907   \n120                    0      774                 0   \n121                    0   147950           3576206   \n122                    0     2856                 0   \n123               556416      473            315068   \n124               484000     7482           1787380   \n125                    0  1829457           8453763   \n126                    0        0            346663   \n127                    0       69            145796   \n128                    0        0             94556   \n129                    0        0                 0   \n130                    0        0                 0   \n131               300000   150458           1248318   \n132                    0        0                 0   \n133               312500  1553729           3654808   \n134               275000   152055            576792   \n135               769862   400572            901657   \n136                    0        0                 0   \n137               350000   307895           2502063   \n138                    0        0            563798   \n139                    0      891            315068   \n140                71023   200308            393818   \n\n     restricted_stock_deferred  salary  shared_receipt_with_poi  to_messages  \\\n0                            0  365788                      702          807   \n1                            0  267102                        0            0   \n2                            0  170941                        0            0   \n3                            0       0                       58          764   \n4                            0  243293                     1035         1045   \n5                            0  267093                        0            0   \n6                            0       0                       22          232   \n7                            0  370448                     2228         2355   \n8                      -329825  374125                     1847         4009   \n9                      -409554  197091                      742         1238   \n10                           0  130724                      119          128   \n11                      -94556       0                        0            0   \n12                           0  248546                     2326         2475   \n13                           0  257486                     2565         2647   \n14                           0       0                       23          169   \n15                     -153686       0                        0            0   \n16                           0  288542                     1132         1758   \n17                           0  251654                      114          136   \n18                           0  288558                      117          258   \n19                           0   63744                        0            0   \n20                           0       0                        0            0   \n21                           0  357091                      215          671   \n22                           0  271442                     3669         8305   \n23                      -32460       0                        0            0   \n24                       44093       0                        0            0   \n25                           0  304110                     1730         3221   \n26                           0       0                        0            0   \n27                           0  187922                      233          383   \n28                           0       0                        0            0   \n29                           0  213625                     1336         1607   \n..                         ...     ...                      ...          ...   \n111                          0  263413                     1469         1744   \n112                          0       0                      589          719   \n113                    -140264   76399                        0            0   \n114                          0  655037                      728          898   \n115                    -307301  261809                      196          312   \n116                          0  248017                       23         1088   \n117                          0       0                        0            0   \n118                          0  229284                      395         2192   \n119                          0  231946                      178          209   \n120                          0  221003                      114          176   \n121                          0  158403                        0            0   \n122                          0       0                        0            0   \n123                          0  250100                     1902         2572   \n124                   -1787380  492375                     1401         2181   \n125                          0  261879                        0            0   \n126                          0       0                      571         2649   \n127                     -82782  239671                        0            0   \n128                          0       0                      508         1433   \n129                          0       0                        0            0   \n130                          0       0                        0            0   \n131                          0  309946                     2271         2374   \n132                          0       0                        0            0   \n133                          0   85274                      437          496   \n134                          0  247338                      379          460   \n135                          0  330546                     2333         3523   \n136                          0       0                        0            0   \n137                          0  415189                     1585         1892   \n138                          0  265214                      300          533   \n139                          0  278601                      772          865   \n140                          0  274975                      874          873   \n\n     total_payments  total_stock_value  \n0           1061827             585062  \n1           5634343           10623258  \n2            211725            6678735  \n3                 0            1038185  \n4            288682            6391065  \n5            628522             208510  \n6           1848227             955873  \n7           4099771            1662855  \n8           3859065             803094  \n9           1737629             880290  \n10          3100224            2282768  \n11           774401             368705  \n12          2014835             954354  \n13          1545059             698920  \n14           966522            2218275  \n15                0             372205  \n16          1490344             698242  \n17          3202070            1416848  \n18           551174             725735  \n19           762135             384930  \n20            87410            1030329  \n21          1798780            5898997  \n22          3471141             547143  \n23                0                  0  \n24           102500             -44093  \n25          3038702            2072035  \n26           189583                  0  \n27           618850             659249  \n28           228656                  0  \n29          2047593            1843816  \n..              ...                ...  \n111         1318763             947861  \n112               0            1118394  \n113          394475            4221891  \n114         1386690              28798  \n115          477557                  0  \n116         1054637            1014505  \n117           55097             192758  \n118          812194             597461  \n119         1566469             896153  \n120          319941                  0  \n121          360300           11884758  \n122           91093           30766064  \n123         1410464            1865087  \n124          550981            8831913  \n125         3123383           23817930  \n126               0             346663  \n127          827696              63014  \n128               0             758931  \n129           50591             176378  \n130               0             759557  \n131         1587421            1920055  \n132            3750                  0  \n133         1979596            5819980  \n134          399393            1168042  \n135         2355702            3444470  \n136          119292                  0  \n137         1868758            2502063  \n138         1092663            3745048  \n139          875760            1080988  \n140         1272284             778546  \n\n[141 rows x 23 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200050_1434104434",
      "dateCreated": "2019-07-11 20:00:50.000",
      "dateStarted": "2019-07-11 20:01:04.938",
      "dateFinished": "2019-07-11 20:01:05.106",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nfrom sklearn.cluster import KMeans\nkmeans \u003d KMeans(n_clusters\u003d2)\n# Fit the model to the data\nkmeans.fit(enron_df)",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:43.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200104_2097739249",
      "dateCreated": "2019-07-11 20:01:04.000",
      "dateStarted": "2019-07-11 20:01:20.809",
      "dateFinished": "2019-07-11 20:01:21.021",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\npredicted_clusters \u003d kmeans.predict(X\u003denron_df)",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:37.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200120_638996435",
      "dateCreated": "2019-07-11 20:01:20.000",
      "dateStarted": "2019-07-11 20:01:42.049",
      "dateFinished": "2019-07-11 20:01:42.164",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nenron_df.shape",
      "user": "",
      "dateUpdated": "2019-07-11 20:02:45.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "(141, 24)",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200141_533590006",
      "dateCreated": "2019-07-11 20:01:41.000",
      "dateStarted": "2019-07-11 20:02:45.864",
      "dateFinished": "2019-07-11 20:02:45.992",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n\nenron_df.describe()",
      "user": "",
      "dateUpdated": "2019-07-11 20:03:04.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "              bonus  bonus-to-salary_ratio  deferral_payments  \\\ncount  1.410000e+02             141.000000       1.410000e+02   \nmean   6.761959e+05               2.183246       1.806275e+05   \nstd    1.238632e+06               3.751022       5.510279e+05   \nmin    0.000000e+00               0.000000      -1.025000e+05   \n25%    0.000000e+00               0.000000       0.000000e+00   \n50%    3.000000e+05               1.216805       0.000000e+00   \n75%    8.000000e+05               2.867893       0.000000e+00   \nmax    8.000000e+06              24.532820       3.131860e+06   \n\n       deferred_income  director_fees  exercised_stock_options       expenses  \\\ncount     1.410000e+02     141.000000             1.410000e+02     141.000000   \nmean     -1.739247e+05    9214.907801             2.012817e+06   35452.843972   \nstd       5.497830e+05   29696.652501             4.794247e+06   45427.767170   \nmin      -3.504386e+06       0.000000             0.000000e+00       0.000000   \n25%      -3.666600e+04       0.000000             0.000000e+00       0.000000   \n50%       0.000000e+00       0.000000             6.014380e+05   21530.000000   \n75%       0.000000e+00       0.000000             1.635238e+06   53122.000000   \nmax       0.000000e+00  125034.000000             3.434838e+07  228763.000000   \n\n       fraction_mail_from_poi  fraction_mail_to_poi  from_messages  ...  \\\ncount              141.000000            141.000000     141.000000  ...   \nmean                 0.594038              0.010496     369.333333  ...   \nstd                  1.394012              0.025604    1465.522265  ...   \nmin                  0.000000              0.000000       0.000000  ...   \n25%                  0.000000              0.000000       0.000000  ...   \n50%                  0.020713              0.000000      16.000000  ...   \n75%                  0.575000              0.009170      52.000000  ...   \nmax                  8.833333              0.196896   14368.000000  ...   \n\n       loan_advances  long_term_incentive         other  restricted_stock  \\\ncount   1.410000e+02         1.410000e+02  1.410000e+02      1.410000e+02   \nmean    5.810284e+05         2.961665e+05  2.273718e+05      8.757805e+05   \nstd     6.865486e+06         5.504499e+05  9.453406e+05      1.995838e+06   \nmin     0.000000e+00         0.000000e+00  0.000000e+00      0.000000e+00   \n25%     0.000000e+00         0.000000e+00  0.000000e+00      4.409300e+04   \n50%     0.000000e+00         0.000000e+00  8.740000e+02      3.605280e+05   \n75%     0.000000e+00         3.697210e+05  1.111220e+05      6.989200e+05   \nmax     8.152500e+07         3.600000e+06  1.035973e+07      1.476169e+07   \n\n       restricted_stock_deferred        salary  shared_receipt_with_poi  \\\ncount               1.410000e+02  1.410000e+02               141.000000   \nmean               -3.463909e+04  1.793887e+05               689.765957   \nstd                 1.715079e+05  1.835972e+05              1071.200552   \nmin                -1.787380e+06  0.000000e+00                 0.000000   \n25%                 0.000000e+00  0.000000e+00                 0.000000   \n50%                 0.000000e+00  2.105000e+05                91.000000   \n75%                 0.000000e+00  2.671020e+05               900.000000   \nmax                 4.409300e+04  1.111258e+06              5521.000000   \n\n        to_messages  total_payments  total_stock_value  \ncount    141.000000    1.410000e+02       1.410000e+02  \nmean    1227.177305    2.012952e+06       2.853309e+06  \nstd     2253.885297    8.761807e+06       6.170588e+06  \nmin        0.000000    0.000000e+00      -4.409300e+04  \n25%        0.000000    8.749200e+04       2.520550e+05  \n50%      266.000000    9.114530e+05       9.558730e+05  \n75%     1607.000000    1.848227e+06       2.282768e+06  \nmax    15149.000000    1.035598e+08       4.911008e+07  \n\n[8 rows x 22 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200245_1068015349",
      "dateCreated": "2019-07-11 20:02:45.000",
      "dateStarted": "2019-07-11 20:03:04.138",
      "dateFinished": "2019-07-11 20:03:04.301",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nenron_df.corr()",
      "user": "",
      "dateUpdated": "2019-07-11 20:03:18.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                              bonus  bonus-to-salary_ratio  deferral_payments  \\\nbonus                      1.000000               0.859285           0.154618   \nbonus-to-salary_ratio      0.859285               1.000000           0.288540   \ndeferral_payments          0.154618               0.288540           1.000000   \ndeferred_income           -0.325052              -0.464036          -0.368692   \ndirector_fees             -0.170610              -0.181898          -0.102591   \nexercised_stock_options    0.411046               0.117811           0.024061   \nexpenses                   0.235571               0.198295          -0.122626   \nfraction_mail_from_poi     0.155173               0.115494          -0.086598   \nfraction_mail_to_poi       0.240150               0.250068           0.179203   \nfrom_messages              0.176294               0.195280           0.058603   \nfrom_poi_to_this_person    0.638847               0.630121           0.081834   \nfrom_this_person_to_poi    0.451309               0.458124           0.020943   \nloan_advances              0.432913               0.098050           0.003294   \nlong_term_incentive        0.646112               0.395134           0.030379   \nother                      0.419069               0.117514           0.009315   \npoi                        0.362095               0.265367          -0.025230   \nrestricted_stock           0.414441               0.120552          -0.014150   \nrestricted_stock_deferred  0.017827               0.022192          -0.078315   \nsalary                     0.672145               0.416129          -0.021905   \nshared_receipt_with_poi    0.662329               0.657945           0.123226   \nto_messages                0.517402               0.503447           0.099294   \ntotal_payments             0.570356               0.233871           0.065580   \ntotal_stock_value          0.453964               0.131203           0.011995   \n\n                           deferred_income  director_fees  \\\nbonus                            -0.325052      -0.170610   \nbonus-to-salary_ratio            -0.464036      -0.181898   \ndeferral_payments                -0.368692      -0.102591   \ndeferred_income                   1.000000       0.067010   \ndirector_fees                     0.067010       1.000000   \nexercised_stock_options          -0.230614      -0.124610   \nexpenses                          0.003485      -0.122371   \nfraction_mail_from_poi           -0.047292      -0.133175   \nfraction_mail_to_poi             -0.002774      -0.128120   \nfrom_messages                    -0.025517      -0.078684   \nfrom_poi_to_this_person          -0.106058      -0.161970   \nfrom_this_person_to_poi          -0.013804      -0.097368   \nloan_advances                    -0.019319      -0.026448   \nlong_term_incentive              -0.338721      -0.168148   \nother                            -0.050650      -0.075166   \npoi                              -0.320354      -0.119128   \nrestricted_stock                 -0.069963      -0.136169   \nrestricted_stock_deferred         0.189454       0.052100   \nsalary                           -0.200950      -0.305354   \nshared_receipt_with_poi          -0.178958      -0.201189   \nto_messages                      -0.098515      -0.168938   \ntotal_payments                   -0.052187      -0.069440   \ntotal_stock_value                -0.196572      -0.139389   \n\n                           exercised_stock_options  expenses  \\\nbonus                                     0.411046  0.235571   \nbonus-to-salary_ratio                     0.117811  0.198295   \ndeferral_payments                         0.024061 -0.122626   \ndeferred_income                          -0.230614  0.003485   \ndirector_fees                            -0.124610 -0.122371   \nexercised_stock_options                   1.000000  0.111446   \nexpenses                                  0.111446  1.000000   \nfraction_mail_from_poi                    0.089126  0.115177   \nfraction_mail_to_poi                     -0.017136  0.071223   \nfrom_messages                            -0.020445  0.157399   \nfrom_poi_to_this_person                   0.096589  0.126419   \nfrom_this_person_to_poi                   0.005887  0.134763   \nloan_advances                             0.571901  0.120168   \nlong_term_incentive                       0.480082  0.139671   \nother                                     0.578784  0.118689   \npoi                                       0.397427  0.206382   \nrestricted_stock                          0.587163  0.161709   \nrestricted_stock_deferred                -0.090577 -0.020721   \nsalary                                    0.434326  0.354737   \nshared_receipt_with_poi                   0.103618  0.275617   \nto_messages                               0.076080  0.237762   \ntotal_payments                            0.595070  0.153624   \ntotal_stock_value                         0.964392  0.138399   \n\n                           fraction_mail_from_poi  fraction_mail_to_poi  \\\nbonus                                    0.155173              0.240150   \nbonus-to-salary_ratio                    0.115494              0.250068   \ndeferral_payments                       -0.086598              0.179203   \ndeferred_income                         -0.047292             -0.002774   \ndirector_fees                           -0.133175             -0.128120   \nexercised_stock_options                  0.089126             -0.017136   \nexpenses                                 0.115177              0.071223   \nfraction_mail_from_poi                   1.000000             -0.013677   \nfraction_mail_to_poi                    -0.013677              1.000000   \nfrom_messages                           -0.089521              0.310794   \nfrom_poi_to_this_person                  0.422202              0.229410   \nfrom_this_person_to_poi                 -0.066569              0.646824   \nloan_advances                            0.171597             -0.022538   \nlong_term_incentive                      0.208463              0.121592   \nother                                    0.133255             -0.035377   \npoi                                      0.244716              0.166487   \nrestricted_stock                         0.080350             -0.014845   \nrestricted_stock_deferred                0.038306              0.006930   \nsalary                                   0.213036              0.185357   \nshared_receipt_with_poi                  0.178507              0.230381   \nto_messages                              0.057270              0.213239   \ntotal_payments                           0.179994              0.034958   \ntotal_stock_value                        0.096345             -0.017880   \n\n                           from_messages  ...  long_term_incentive     other  \\\nbonus                           0.176294  ...             0.646112  0.419069   \nbonus-to-salary_ratio           0.195280  ...             0.395134  0.117514   \ndeferral_payments               0.058603  ...             0.030379  0.009315   \ndeferred_income                -0.025517  ...            -0.338721 -0.050650   \ndirector_fees                  -0.078684  ...            -0.168148 -0.075166   \nexercised_stock_options        -0.020445  ...             0.480082  0.578784   \nexpenses                        0.157399  ...             0.139671  0.118689   \nfraction_mail_from_poi         -0.089521  ...             0.208463  0.133255   \nfraction_mail_to_poi            0.310794  ...             0.121592 -0.035377   \nfrom_messages                   1.000000  ...             0.078870 -0.051375   \nfrom_poi_to_this_person         0.264782  ...             0.323910  0.056222   \nfrom_this_person_to_poi         0.609272  ...             0.220213 -0.041248   \nloan_advances                  -0.019378  ...             0.508863  0.909004   \nlong_term_incentive             0.078870  ...             1.000000  0.518367   \nother                          -0.051375  ...             0.518367  1.000000   \npoi                            -0.035554  ...             0.353658  0.233766   \nrestricted_stock                0.023032  ...             0.434258  0.701164   \nrestricted_stock_deferred      -0.024140  ...             0.003234  0.024950   \nsalary                          0.163332  ...             0.625041  0.436965   \nshared_receipt_with_poi         0.309658  ...             0.335057  0.111097   \nto_messages                     0.511199  ...             0.219607  0.077534   \ntotal_payments                  0.015165  ...             0.602640  0.918855   \ntotal_stock_value              -0.009080  ...             0.513606  0.677193   \n\n                                poi  restricted_stock  \\\nbonus                      0.362095          0.414441   \nbonus-to-salary_ratio      0.265367          0.120552   \ndeferral_payments         -0.025230         -0.014150   \ndeferred_income           -0.320354         -0.069963   \ndirector_fees             -0.119128         -0.136169   \nexercised_stock_options    0.397427          0.587163   \nexpenses                   0.206382          0.161709   \nfraction_mail_from_poi     0.244716          0.080350   \nfraction_mail_to_poi       0.166487         -0.014845   \nfrom_messages             -0.035554          0.023032   \nfrom_poi_to_this_person    0.201278          0.091419   \nfrom_this_person_to_poi    0.127666          0.059243   \nloan_advances              0.220775          0.589938   \nlong_term_incentive        0.353658          0.434258   \nother                      0.233766          0.701164   \npoi                        1.000000          0.252760   \nrestricted_stock           0.252760          1.000000   \nrestricted_stock_deferred  0.077537         -0.018674   \nsalary                     0.382146          0.530405   \nshared_receipt_with_poi    0.249804          0.159813   \nto_messages                0.111197          0.149787   \ntotal_payments             0.258544          0.629918   \ntotal_stock_value          0.392730          0.779168   \n\n                           restricted_stock_deferred    salary  \\\nbonus                                       0.017827  0.672145   \nbonus-to-salary_ratio                       0.022192  0.416129   \ndeferral_payments                          -0.078315 -0.021905   \ndeferred_income                             0.189454 -0.200950   \ndirector_fees                               0.052100 -0.305354   \nexercised_stock_options                    -0.090577  0.434326   \nexpenses                                   -0.020721  0.354737   \nfraction_mail_from_poi                      0.038306  0.213036   \nfraction_mail_to_poi                        0.006930  0.185357   \nfrom_messages                              -0.024140  0.163332   \nfrom_poi_to_this_person                    -0.028982  0.358195   \nfrom_this_person_to_poi                     0.018983  0.232578   \nloan_advances                               0.017215  0.413597   \nlong_term_incentive                         0.003234  0.625041   \nother                                       0.024950  0.436965   \npoi                                         0.077537  0.382146   \nrestricted_stock                           -0.018674  0.530405   \nrestricted_stock_deferred                   1.000000 -0.093248   \nsalary                                     -0.093248  1.000000   \nshared_receipt_with_poi                    -0.021242  0.491314   \nto_messages                                -0.009472  0.397536   \ntotal_payments                              0.024058  0.513126   \ntotal_stock_value                          -0.048668  0.506518   \n\n                           shared_receipt_with_poi  to_messages  \\\nbonus                                     0.662329     0.517402   \nbonus-to-salary_ratio                     0.657945     0.503447   \ndeferral_payments                         0.123226     0.099294   \ndeferred_income                          -0.178958    -0.098515   \ndirector_fees                            -0.201189    -0.168938   \nexercised_stock_options                   0.103618     0.076080   \nexpenses                                  0.275617     0.237762   \nfraction_mail_from_poi                    0.178507     0.057270   \nfraction_mail_to_poi                      0.230381     0.213239   \nfrom_messages                             0.309658     0.511199   \nfrom_poi_to_this_person                   0.722760     0.619690   \nfrom_this_person_to_poi                   0.536422     0.608974   \nloan_advances                             0.136304     0.114560   \nlong_term_incentive                       0.335057     0.219607   \nother                                     0.111097     0.077534   \npoi                                       0.249804     0.111197   \nrestricted_stock                          0.159813     0.149787   \nrestricted_stock_deferred                -0.021242    -0.009472   \nsalary                                    0.491314     0.397536   \nshared_receipt_with_poi                   1.000000     0.884893   \nto_messages                               0.884893     1.000000   \ntotal_payments                            0.240928     0.194035   \ntotal_stock_value                         0.131674     0.107353   \n\n                           total_payments  total_stock_value  \nbonus                            0.570356           0.453964  \nbonus-to-salary_ratio            0.233871           0.131203  \ndeferral_payments                0.065580           0.011995  \ndeferred_income                 -0.052187          -0.196572  \ndirector_fees                   -0.069440          -0.139389  \nexercised_stock_options          0.595070           0.964392  \nexpenses                         0.153624           0.138399  \nfraction_mail_from_poi           0.179994           0.096345  \nfraction_mail_to_poi             0.034958          -0.017880  \nfrom_messages                    0.015165          -0.009080  \nfrom_poi_to_this_person          0.200221           0.103863  \nfrom_this_person_to_poi          0.071218           0.024296  \nloan_advances                    0.982995           0.635638  \nlong_term_incentive              0.602640           0.513606  \nother                            0.918855           0.677193  \npoi                              0.258544           0.392730  \nrestricted_stock                 0.629918           0.779168  \nrestricted_stock_deferred        0.024058          -0.048668  \nsalary                           0.513126           0.506518  \nshared_receipt_with_poi          0.240928           0.131674  \nto_messages                      0.194035           0.107353  \ntotal_payments                   1.000000           0.666775  \ntotal_stock_value                0.666775           1.000000  \n\n[23 rows x 23 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200303_151362502",
      "dateCreated": "2019-07-11 20:03:03.000",
      "dateStarted": "2019-07-11 20:03:18.112",
      "dateFinished": "2019-07-11 20:03:18.278",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nimport numpy as np\nfrom sklearn.decomposition import PCA\nX \u003d np.array(df_no_poi)\npca \u003d PCA(n_components\u003d2)\nnew_X \u003d pca.fit_transform(X)  \n\nprint(pca.explained_variance_ratio_)  \n\nprint(pca.singular_values_)",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:31.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200317_23127974",
      "dateCreated": "2019-07-11 20:03:17.000",
      "dateStarted": "2019-07-11 20:03:35.169",
      "dateFinished": "2019-07-11 20:03:35.282",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n\ntemp \u003d list(zip(new_X.tolist(),predicted_clusters.tolist(),classes.tolist()))\nprint(temp)",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:27.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200334_1168017174",
      "dateCreated": "2019-07-11 20:03:34.000",
      "dateStarted": "2019-07-11 20:03:54.827",
      "dateFinished": "2019-07-11 20:03:54.939",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\n%matplotlib\n\nfig \u003d plt.figure()\nax \u003d fig.add_subplot(111, projection\u003d\u00273d\u0027)\n\nx \u003dnew_X[:,0]\ny \u003dclasses\nz \u003dnew_X[:,1]\n\nax.scatter(x, y, z, c\u003dpredicted_clusters, s\u003d25, cmap\u003d\u0027plasma\u0027)\n\nax.set_xlabel(\u0027PC-1\u0027)\nax.set_ylabel(\u0027POI\u0027)\nax.set_zlabel(\u0027PC-2\u0027) \n\nplt.show()",
      "user": "",
      "dateUpdated": "2019-07-11 20:04:20.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200354_926849884",
      "dateCreated": "2019-07-11 20:03:54.000",
      "dateStarted": "2019-07-11 20:04:08.503",
      "dateFinished": "2019-07-11 20:04:08.715",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# Naive Bayes Model\n\nfrom pyspark import SparkFiles\nimport pandas as pd\nimport pickle\n# Load in user_data.csv from S3 into a DataFrame\nurl \u003d \"https://ucsd-enron-final-project.s3-us-west-1.amazonaws.com/enron_dataset.csv\"\nspark.sparkContext.addFile(url)\n\npy_df \u003d spark.read.csv(SparkFiles.get(\"enron_dataset.csv\"), sep\u003d\",\", header\u003dTrue)\n\npy_df.show()",
      "user": "",
      "dateUpdated": "2019-07-11 20:12:42.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "+-------------------+---------+---------------------+-----------------+---------------+-------------+-----------------------+--------+----------------------+--------------------+-------------+-----------------------+-----------------------+-------------+-------------------+---------+-----+----------------+-------------------------+--------+-----------------------+-----------+--------------+-----------------+\n|                _c0|    bonus|bonus-to-salary_ratio|deferral_payments|deferred_income|director_fees|exercised_stock_options|expenses|fraction_mail_from_poi|fraction_mail_to_poi|from_messages|from_poi_to_this_person|from_this_person_to_poi|loan_advances|long_term_incentive|    other|  poi|restricted_stock|restricted_stock_deferred|  salary|shared_receipt_with_poi|to_messages|total_payments|total_stock_value|\n+-------------------+---------+---------------------+-----------------+---------------+-------------+-----------------------+--------+----------------------+--------------------+-------------+-----------------------+-----------------------+-------------+-------------------+---------+-----+----------------+-------------------------+--------+-----------------------+-----------+--------------+-----------------+\n|         METTS MARK| 600000.0|   1.6402943781644013|              0.0|            0.0|          0.0|                    0.0| 94299.0|    1.3103448275862069|0.001239157372986...|         29.0|                   38.0|                    1.0|          0.0|                0.0|   1740.0|False|        585062.0|                      0.0|365788.0|                  702.0|      807.0|     1061827.0|         585062.0|\n|      BAXTER JOHN C|1200000.0|    4.492665723206865|        1295738.0|     -1386055.0|          0.0|              6680544.0| 11200.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|          1586055.0|2660303.0|False|       3942714.0|                      0.0|267102.0|                    0.0|        0.0|     5634343.0|       10623258.0|\n|     ELLIOTT STEVEN| 350000.0|    2.047490069673162|              0.0|      -400729.0|          0.0|              4890344.0| 78552.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|                0.0|  12961.0|False|       1788391.0|                      0.0|170941.0|                    0.0|        0.0|      211725.0|        6678735.0|\n|   CORDES WILLIAM R|      0.0|                  0.0|              0.0|            0.0|          0.0|               651850.0|     0.0|    0.8333333333333334|                 0.0|         12.0|                   10.0|                    0.0|          0.0|                0.0|      0.0|False|        386335.0|                      0.0|     0.0|                   58.0|      764.0|           0.0|        1038185.0|\n|     HANNON KEVIN P|1500000.0|    6.165405498719651|              0.0|     -3117011.0|          0.0|              5538001.0| 34039.0|                   1.0|0.020095693779904306|         32.0|                   32.0|                   21.0|          0.0|          1617011.0|  11350.0| True|        853064.0|                      0.0|243293.0|                 1035.0|     1045.0|      288682.0|        6391065.0|\n|MORDAUNT KRISTINA M| 325000.0|   1.2168046335920448|              0.0|            0.0|          0.0|                    0.0| 35018.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|                0.0|   1411.0|False|        208510.0|                      0.0|267093.0|                    0.0|        0.0|      628522.0|         208510.0|\n|   MEYER ROCKFORD G|      0.0|                  0.0|        1848227.0|            0.0|          0.0|               493489.0|     0.0|                   0.0|                 0.0|         28.0|                    0.0|                    0.0|          0.0|                0.0|      0.0|False|        462384.0|                      0.0|     0.0|                   22.0|      232.0|     1848227.0|         955873.0|\n|    MCMAHON JEFFREY|2600000.0|    7.018528916339135|              0.0|            0.0|          0.0|              1104054.0|137108.0|    1.2083333333333333|0.011040339702760084|         48.0|                   58.0|                   26.0|          0.0|           694862.0| 297353.0|False|        558801.0|                      0.0|370448.0|                 2228.0|     2355.0|     4099771.0|        1662855.0|\n|    HAEDICKE MARK E|1150000.0|    3.073838957567658|        2157527.0|      -934484.0|          0.0|               608750.0| 76169.0|   0.09273570324574962|0.015215764529807932|       1941.0|                  180.0|                   61.0|          0.0|           983346.0|  52382.0|False|        524169.0|                -329825.0|374125.0|                 1847.0|     4009.0|     3859065.0|         803094.0|\n|    PIPER GREGORY F| 400000.0|   2.0295193590777862|        1130036.0|       -33333.0|          0.0|               880290.0| 43057.0|    0.2747747747747748| 0.03877221324717286|        222.0|                   61.0|                   48.0|          0.0|                0.0|    778.0|False|        409554.0|                -409554.0|197091.0|                  742.0|     1238.0|     1737629.0|         880290.0|\n|    HUMPHREY GENE E|      0.0|                  0.0|        2964506.0|            0.0|          0.0|              2282768.0|  4994.0|    0.5882352941176471|           0.1328125|         17.0|                   10.0|                   17.0|          0.0|                0.0|      0.0|False|             0.0|                      0.0|130724.0|                  119.0|      128.0|     3100224.0|        2282768.0|\n|      NOLES JAMES L|      0.0|                  0.0|         774401.0|            0.0|          0.0|                    0.0|     0.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|                0.0|      0.0|False|        463261.0|                 -94556.0|     0.0|                    0.0|        0.0|      774401.0|         368705.0|\n|  BLACHMAN JEREMY M| 850000.0|    3.419890080709406|              0.0|            0.0|          0.0|               765313.0| 84208.0|    1.7857142857142858|0.000808080808080...|         14.0|                   25.0|                    2.0|          0.0|           831809.0|    272.0|False|        189041.0|                      0.0|248546.0|                 2326.0|     2475.0|     2014835.0|         954354.0|\n|       SUNDE MARTIN| 700000.0|   2.7185944090164127|              0.0|            0.0|          0.0|                    0.0|     0.0|    0.9736842105263158|0.004911220249338874|         38.0|                   37.0|                   13.0|          0.0|           476451.0| 111122.0|False|        698920.0|                      0.0|257486.0|                 2565.0|     2647.0|     1545059.0|         698920.0|\n|       GIBBS DANA R|      0.0|                  0.0|         504610.0|            0.0|          0.0|              2218275.0|     0.0|                   0.0|                 0.0|         12.0|                    0.0|                    0.0|          0.0|           461912.0|      0.0|False|             0.0|                      0.0|     0.0|                   23.0|      169.0|      966522.0|        2218275.0|\n|    LOWRY CHARLES P|      0.0|                  0.0|              0.0|            0.0|          0.0|               372205.0|     0.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|                0.0|      0.0|False|        153686.0|                -153686.0|     0.0|                    0.0|        0.0|           0.0|         372205.0|\n|     COLWELL WESLEY|1200000.0|    4.158839960906905|          27610.0|      -144062.0|          0.0|                    0.0| 16514.0|                   6.0|0.006257110352673493|         40.0|                  240.0|                   11.0|          0.0|                0.0| 101740.0| True|        698242.0|                      0.0|288542.0|                 1132.0|     1758.0|     1490344.0|         698242.0|\n|      MULLER MARK S|1100000.0|   4.3710809285765375|         842924.0|      -719000.0|          0.0|              1056320.0|     0.0|                  0.75|                 0.0|         16.0|                   12.0|                    0.0|          0.0|          1725545.0|    947.0|False|        360528.0|                      0.0|251654.0|                  114.0|      136.0|     3202070.0|        1416848.0|\n| JACKSON CHARLENE R| 250000.0|   0.8663769502145149|              0.0|            0.0|          0.0|               185063.0| 10181.0|   0.44642857142857145| 0.07364341085271318|         56.0|                   25.0|                   19.0|          0.0|                0.0|   2435.0|False|        540672.0|                      0.0|288558.0|                  117.0|      258.0|      551174.0|         725735.0|\n| WESTFAHL RICHARD K|      0.0|                  0.0|              0.0|       -10800.0|          0.0|                    0.0| 51870.0|                   0.0|                 0.0|          0.0|                    0.0|                    0.0|          0.0|           256191.0| 401130.0|False|        384930.0|                      0.0| 63744.0|                    0.0|        0.0|      762135.0|         384930.0|\n+-------------------+---------+---------------------+-----------------+---------------+-------------+-----------------------+--------+----------------------+--------------------+-------------+-----------------------+-----------------------+-------------+-------------------+---------+-----+----------------+-------------------------+--------+-----------------------+-----------+--------------+-----------------+\nonly showing top 20 rows\n\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-200408_1094227133",
      "dateCreated": "2019-07-11 20:04:08.000",
      "dateStarted": "2019-07-11 20:12:32.540",
      "dateFinished": "2019-07-11 20:12:42.330",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# make a pandas dataframe\nimport pandas as pd\n\ndf \u003d py_df.toPandas()\n\ndf.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:12:51.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                _c0      bonus bonus-to-salary_ratio deferral_payments  \\\n0        METTS MARK   600000.0    1.6402943781644013               0.0   \n1     BAXTER JOHN C  1200000.0     4.492665723206865         1295738.0   \n2    ELLIOTT STEVEN   350000.0     2.047490069673162               0.0   \n3  CORDES WILLIAM R        0.0                   0.0               0.0   \n4    HANNON KEVIN P  1500000.0     6.165405498719651               0.0   \n\n  deferred_income director_fees exercised_stock_options expenses  \\\n0             0.0           0.0                     0.0  94299.0   \n1      -1386055.0           0.0               6680544.0  11200.0   \n2       -400729.0           0.0               4890344.0  78552.0   \n3             0.0           0.0                651850.0      0.0   \n4      -3117011.0           0.0               5538001.0  34039.0   \n\n  fraction_mail_from_poi   fraction_mail_to_poi  ... long_term_incentive  \\\n0     1.3103448275862069  0.0012391573729863693  ...                 0.0   \n1                    0.0                    0.0  ...           1586055.0   \n2                    0.0                    0.0  ...                 0.0   \n3     0.8333333333333334                    0.0  ...                 0.0   \n4                    1.0   0.020095693779904306  ...           1617011.0   \n\n       other    poi restricted_stock restricted_stock_deferred    salary  \\\n0     1740.0  False         585062.0                       0.0  365788.0   \n1  2660303.0  False        3942714.0                       0.0  267102.0   \n2    12961.0  False        1788391.0                       0.0  170941.0   \n3        0.0  False         386335.0                       0.0       0.0   \n4    11350.0   True         853064.0                       0.0  243293.0   \n\n  shared_receipt_with_poi to_messages total_payments total_stock_value  \n0                   702.0       807.0      1061827.0          585062.0  \n1                     0.0         0.0      5634343.0        10623258.0  \n2                     0.0         0.0       211725.0         6678735.0  \n3                    58.0       764.0            0.0         1038185.0  \n4                  1035.0      1045.0       288682.0         6391065.0  \n\n[5 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201217_1496045620",
      "dateCreated": "2019-07-11 20:12:17.000",
      "dateStarted": "2019-07-11 20:12:50.689",
      "dateFinished": "2019-07-11 20:12:51.000",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df \u003d df.rename(columns\u003d{\u0027_c0\u0027: \u0027index\u0027})\n\nnew_df \u003dnew_df.set_index(\u0027index\u0027)\n\nnew_df.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:01.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                      bonus bonus-to-salary_ratio deferral_payments  \\\nindex                                                                 \nMETTS MARK         600000.0    1.6402943781644013               0.0   \nBAXTER JOHN C     1200000.0     4.492665723206865         1295738.0   \nELLIOTT STEVEN     350000.0     2.047490069673162               0.0   \nCORDES WILLIAM R        0.0                   0.0               0.0   \nHANNON KEVIN P    1500000.0     6.165405498719651               0.0   \n\n                 deferred_income director_fees exercised_stock_options  \\\nindex                                                                    \nMETTS MARK                   0.0           0.0                     0.0   \nBAXTER JOHN C         -1386055.0           0.0               6680544.0   \nELLIOTT STEVEN         -400729.0           0.0               4890344.0   \nCORDES WILLIAM R             0.0           0.0                651850.0   \nHANNON KEVIN P        -3117011.0           0.0               5538001.0   \n\n                 expenses fraction_mail_from_poi   fraction_mail_to_poi  \\\nindex                                                                     \nMETTS MARK        94299.0     1.3103448275862069  0.0012391573729863693   \nBAXTER JOHN C     11200.0                    0.0                    0.0   \nELLIOTT STEVEN    78552.0                    0.0                    0.0   \nCORDES WILLIAM R      0.0     0.8333333333333334                    0.0   \nHANNON KEVIN P    34039.0                    1.0   0.020095693779904306   \n\n                 from_messages  ... long_term_incentive      other    poi  \\\nindex                           ...                                         \nMETTS MARK                29.0  ...                 0.0     1740.0  False   \nBAXTER JOHN C              0.0  ...           1586055.0  2660303.0  False   \nELLIOTT STEVEN             0.0  ...                 0.0    12961.0  False   \nCORDES WILLIAM R          12.0  ...                 0.0        0.0  False   \nHANNON KEVIN P            32.0  ...           1617011.0    11350.0   True   \n\n                 restricted_stock restricted_stock_deferred    salary  \\\nindex                                                                   \nMETTS MARK               585062.0                       0.0  365788.0   \nBAXTER JOHN C           3942714.0                       0.0  267102.0   \nELLIOTT STEVEN          1788391.0                       0.0  170941.0   \nCORDES WILLIAM R         386335.0                       0.0       0.0   \nHANNON KEVIN P           853064.0                       0.0  243293.0   \n\n                 shared_receipt_with_poi to_messages total_payments  \\\nindex                                                                 \nMETTS MARK                         702.0       807.0      1061827.0   \nBAXTER JOHN C                        0.0         0.0      5634343.0   \nELLIOTT STEVEN                       0.0         0.0       211725.0   \nCORDES WILLIAM R                    58.0       764.0            0.0   \nHANNON KEVIN P                    1035.0      1045.0       288682.0   \n\n                 total_stock_value  \nindex                               \nMETTS MARK                585062.0  \nBAXTER JOHN C           10623258.0  \nELLIOTT STEVEN           6678735.0  \nCORDES WILLIAM R         1038185.0  \nHANNON KEVIN P           6391065.0  \n\n[5 rows x 23 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201250_1586089529",
      "dateCreated": "2019-07-11 20:12:50.000",
      "dateStarted": "2019-07-11 20:13:00.928",
      "dateFinished": "2019-07-11 20:13:01.040",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nheat \u003d pd.read_csv(url)\n\ndef correlation_heatmap(heat):\n    correlations \u003d heat.corr()\n\n    fig, ax \u003d plt.subplots(figsize\u003d(20,20))\n    sns.heatmap(correlations, vmax\u003d1.0, center\u003d0, fmt\u003d\u0027.2f\u0027,\n                square\u003dTrue, linewidths\u003d.5, annot\u003dTrue, cbar_kws\u003d{\"shrink\": .70})\n    plt.show();",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:26.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201300_1167738801",
      "dateCreated": "2019-07-11 20:13:00.000",
      "dateStarted": "2019-07-11 20:13:25.742",
      "dateFinished": "2019-07-11 20:13:26.003",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df.dtypes",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:28.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "bonus                        object\nbonus-to-salary_ratio        object\ndeferral_payments            object\ndeferred_income              object\ndirector_fees                object\nexercised_stock_options      object\nexpenses                     object\nfraction_mail_from_poi       object\nfraction_mail_to_poi         object\nfrom_messages                object\nfrom_poi_to_this_person      object\nfrom_this_person_to_poi      object\nloan_advances                object\nlong_term_incentive          object\nother                        object\npoi                          object\nrestricted_stock             object\nrestricted_stock_deferred    object\nsalary                       object\nshared_receipt_with_poi      object\nto_messages                  object\ntotal_payments               object\ntotal_stock_value            object\ndtype: object",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201314_493477186",
      "dateCreated": "2019-07-11 20:13:14.000",
      "dateStarted": "2019-07-11 20:13:27.986",
      "dateFinished": "2019-07-11 20:13:28.097",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df[\u0027poi\u0027] \u003dnew_df[\u0027poi\u0027].replace({\u0027True\u0027: True, \u0027False\u0027: False})\nnew_df.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:40.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                      bonus bonus-to-salary_ratio deferral_payments  \\\nindex                                                                 \nMETTS MARK         600000.0    1.6402943781644013               0.0   \nBAXTER JOHN C     1200000.0     4.492665723206865         1295738.0   \nELLIOTT STEVEN     350000.0     2.047490069673162               0.0   \nCORDES WILLIAM R        0.0                   0.0               0.0   \nHANNON KEVIN P    1500000.0     6.165405498719651               0.0   \n\n                 deferred_income director_fees exercised_stock_options  \\\nindex                                                                    \nMETTS MARK                   0.0           0.0                     0.0   \nBAXTER JOHN C         -1386055.0           0.0               6680544.0   \nELLIOTT STEVEN         -400729.0           0.0               4890344.0   \nCORDES WILLIAM R             0.0           0.0                651850.0   \nHANNON KEVIN P        -3117011.0           0.0               5538001.0   \n\n                 expenses fraction_mail_from_poi   fraction_mail_to_poi  \\\nindex                                                                     \nMETTS MARK        94299.0     1.3103448275862069  0.0012391573729863693   \nBAXTER JOHN C     11200.0                    0.0                    0.0   \nELLIOTT STEVEN    78552.0                    0.0                    0.0   \nCORDES WILLIAM R      0.0     0.8333333333333334                    0.0   \nHANNON KEVIN P    34039.0                    1.0   0.020095693779904306   \n\n                 from_messages  ... long_term_incentive      other    poi  \\\nindex                           ...                                         \nMETTS MARK                29.0  ...                 0.0     1740.0  False   \nBAXTER JOHN C              0.0  ...           1586055.0  2660303.0  False   \nELLIOTT STEVEN             0.0  ...                 0.0    12961.0  False   \nCORDES WILLIAM R          12.0  ...                 0.0        0.0  False   \nHANNON KEVIN P            32.0  ...           1617011.0    11350.0   True   \n\n                 restricted_stock restricted_stock_deferred    salary  \\\nindex                                                                   \nMETTS MARK               585062.0                       0.0  365788.0   \nBAXTER JOHN C           3942714.0                       0.0  267102.0   \nELLIOTT STEVEN          1788391.0                       0.0  170941.0   \nCORDES WILLIAM R         386335.0                       0.0       0.0   \nHANNON KEVIN P           853064.0                       0.0  243293.0   \n\n                 shared_receipt_with_poi to_messages total_payments  \\\nindex                                                                 \nMETTS MARK                         702.0       807.0      1061827.0   \nBAXTER JOHN C                        0.0         0.0      5634343.0   \nELLIOTT STEVEN                       0.0         0.0       211725.0   \nCORDES WILLIAM R                    58.0       764.0            0.0   \nHANNON KEVIN P                    1035.0      1045.0       288682.0   \n\n                 total_stock_value  \nindex                               \nMETTS MARK                585062.0  \nBAXTER JOHN C           10623258.0  \nELLIOTT STEVEN           6678735.0  \nCORDES WILLIAM R         1038185.0  \nHANNON KEVIN P           6391065.0  \n\n[5 rows x 23 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201327_1537492925",
      "dateCreated": "2019-07-11 20:13:27.000",
      "dateStarted": "2019-07-11 20:13:40.360",
      "dateFinished": "2019-07-11 20:13:40.472",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df.dtypes",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:50.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "bonus                        object\nbonus-to-salary_ratio        object\ndeferral_payments            object\ndeferred_income              object\ndirector_fees                object\nexercised_stock_options      object\nexpenses                     object\nfraction_mail_from_poi       object\nfraction_mail_to_poi         object\nfrom_messages                object\nfrom_poi_to_this_person      object\nfrom_this_person_to_poi      object\nloan_advances                object\nlong_term_incentive          object\nother                        object\npoi                            bool\nrestricted_stock             object\nrestricted_stock_deferred    object\nsalary                       object\nshared_receipt_with_poi      object\nto_messages                  object\ntotal_payments               object\ntotal_stock_value            object\ndtype: object",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201340_1660086734",
      "dateCreated": "2019-07-11 20:13:40.000",
      "dateStarted": "2019-07-11 20:13:49.899",
      "dateFinished": "2019-07-11 20:13:50.011",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df \u003d new_df.apply(lambda x : pd.to_numeric(x, errors \u003d \u0027coerce\u0027)).copy().fillna(0)\nnew_df.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:13:59.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                      bonus  bonus-to-salary_ratio  deferral_payments  \\\nindex                                                                   \nMETTS MARK         600000.0               1.640294                0.0   \nBAXTER JOHN C     1200000.0               4.492666          1295738.0   \nELLIOTT STEVEN     350000.0               2.047490                0.0   \nCORDES WILLIAM R        0.0               0.000000                0.0   \nHANNON KEVIN P    1500000.0               6.165405                0.0   \n\n                  deferred_income  director_fees  exercised_stock_options  \\\nindex                                                                       \nMETTS MARK                    0.0            0.0                      0.0   \nBAXTER JOHN C          -1386055.0            0.0                6680544.0   \nELLIOTT STEVEN          -400729.0            0.0                4890344.0   \nCORDES WILLIAM R              0.0            0.0                 651850.0   \nHANNON KEVIN P         -3117011.0            0.0                5538001.0   \n\n                  expenses  fraction_mail_from_poi  fraction_mail_to_poi  \\\nindex                                                                      \nMETTS MARK         94299.0                1.310345              0.001239   \nBAXTER JOHN C      11200.0                0.000000              0.000000   \nELLIOTT STEVEN     78552.0                0.000000              0.000000   \nCORDES WILLIAM R       0.0                0.833333              0.000000   \nHANNON KEVIN P     34039.0                1.000000              0.020096   \n\n                  from_messages  ...  long_term_incentive      other    poi  \\\nindex                            ...                                          \nMETTS MARK                 29.0  ...                  0.0     1740.0  False   \nBAXTER JOHN C               0.0  ...            1586055.0  2660303.0  False   \nELLIOTT STEVEN              0.0  ...                  0.0    12961.0  False   \nCORDES WILLIAM R           12.0  ...                  0.0        0.0  False   \nHANNON KEVIN P             32.0  ...            1617011.0    11350.0   True   \n\n                  restricted_stock  restricted_stock_deferred    salary  \\\nindex                                                                     \nMETTS MARK                585062.0                        0.0  365788.0   \nBAXTER JOHN C            3942714.0                        0.0  267102.0   \nELLIOTT STEVEN           1788391.0                        0.0  170941.0   \nCORDES WILLIAM R          386335.0                        0.0       0.0   \nHANNON KEVIN P            853064.0                        0.0  243293.0   \n\n                  shared_receipt_with_poi  to_messages  total_payments  \\\nindex                                                                    \nMETTS MARK                          702.0        807.0       1061827.0   \nBAXTER JOHN C                         0.0          0.0       5634343.0   \nELLIOTT STEVEN                        0.0          0.0        211725.0   \nCORDES WILLIAM R                     58.0        764.0             0.0   \nHANNON KEVIN P                     1035.0       1045.0        288682.0   \n\n                  total_stock_value  \nindex                                \nMETTS MARK                 585062.0  \nBAXTER JOHN C            10623258.0  \nELLIOTT STEVEN            6678735.0  \nCORDES WILLIAM R          1038185.0  \nHANNON KEVIN P            6391065.0  \n\n[5 rows x 23 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201349_738352776",
      "dateCreated": "2019-07-11 20:13:49.000",
      "dateStarted": "2019-07-11 20:13:59.340",
      "dateFinished": "2019-07-11 20:13:59.492",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nnew_df.dtypes",
      "user": "",
      "dateUpdated": "2019-07-11 20:14:09.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "bonus                        float64\nbonus-to-salary_ratio        float64\ndeferral_payments            float64\ndeferred_income              float64\ndirector_fees                float64\nexercised_stock_options      float64\nexpenses                     float64\nfraction_mail_from_poi       float64\nfraction_mail_to_poi         float64\nfrom_messages                float64\nfrom_poi_to_this_person      float64\nfrom_this_person_to_poi      float64\nloan_advances                float64\nlong_term_incentive          float64\nother                        float64\npoi                             bool\nrestricted_stock             float64\nrestricted_stock_deferred    float64\nsalary                       float64\nshared_receipt_with_poi      float64\nto_messages                  float64\ntotal_payments               float64\ntotal_stock_value            float64\ndtype: object",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201359_8536452",
      "dateCreated": "2019-07-11 20:13:59.000",
      "dateStarted": "2019-07-11 20:14:09.810",
      "dateFinished": "2019-07-11 20:14:09.922",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# select features based on correlation values to POI if correlation \u003e\u003d.25\n\nfeatures_list \u003d new_df[[\u0027poi\u0027, \u0027total_stock_value\u0027, \u0027total_payments\u0027,\u0027shared_receipt_with_poi\u0027, \u0027salary\u0027, \u0027restricted_stock\u0027, \u0027long_term_incentive\u0027, \u0027exercised_stock_options\u0027, \u0027deferred_income\u0027, \u0027bonus-to-salary_ratio\u0027, \u0027bonus\u0027]]\n\nfeatures_list_new \u003d features_list.reset_index()\n\nfeatures_list_new \u003d features_list_new.rename(columns\u003d{\u0027index\u0027: \u0027Name\u0027})\n\nfeatures_list_new.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:14:19.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "               Name    poi  total_stock_value  total_payments  \\\n0        METTS MARK  False           585062.0       1061827.0   \n1     BAXTER JOHN C  False         10623258.0       5634343.0   \n2    ELLIOTT STEVEN  False          6678735.0        211725.0   \n3  CORDES WILLIAM R  False          1038185.0             0.0   \n4    HANNON KEVIN P   True          6391065.0        288682.0   \n\n   shared_receipt_with_poi    salary  restricted_stock  long_term_incentive  \\\n0                    702.0  365788.0          585062.0                  0.0   \n1                      0.0  267102.0         3942714.0            1586055.0   \n2                      0.0  170941.0         1788391.0                  0.0   \n3                     58.0       0.0          386335.0                  0.0   \n4                   1035.0  243293.0          853064.0            1617011.0   \n\n   exercised_stock_options  deferred_income  bonus-to-salary_ratio      bonus  \n0                      0.0              0.0               1.640294   600000.0  \n1                6680544.0       -1386055.0               4.492666  1200000.0  \n2                4890344.0        -400729.0               2.047490   350000.0  \n3                 651850.0              0.0               0.000000        0.0  \n4                5538001.0       -3117011.0               6.165405  1500000.0  ",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201409_1505081458",
      "dateCreated": "2019-07-11 20:14:09.000",
      "dateStarted": "2019-07-11 20:14:19.290",
      "dateFinished": "2019-07-11 20:14:19.404",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.model_selection import train_test_split\n\ny \u003d features_list[\u0027poi\u0027]\nX \u003d features_list.drop(\u0027poi\u0027, axis\u003d1)\n\nX_train, X_test, y_train, y_test \u003d train_test_split(X, y, random_state\u003d1, stratify\u003dy)",
      "user": "",
      "dateUpdated": "2019-07-11 20:14:32.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201419_1839820141",
      "dateCreated": "2019-07-11 20:14:19.000",
      "dateStarted": "2019-07-11 20:14:31.984",
      "dateFinished": "2019-07-11 20:14:32.096",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.naive_bayes import GaussianNB\n\nclf \u003d GaussianNB()\n\nclf.fit(X_train, y_train)\nprediction \u003d clf.predict(X_test)\nprint(prediction)",
      "user": "",
      "dateUpdated": "2019-07-11 20:14:43.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "[False  True False False False False False False False False False False\n False False False False False  True  True False False False False False\n  True False False False False False False False False False False False]\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201431_1553817210",
      "dateCreated": "2019-07-11 20:14:31.000",
      "dateStarted": "2019-07-11 20:14:43.704",
      "dateFinished": "2019-07-11 20:14:43.816",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nfrom sklearn.naive_bayes import GaussianNB\nscore \u003d clf.score( X_train, y_train)\n\nprint(score)",
      "user": "",
      "dateUpdated": "2019-07-11 20:14:52.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "0.8761904761904762\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201443_1563145658",
      "dateCreated": "2019-07-11 20:14:43.000",
      "dateStarted": "2019-07-11 20:14:51.902",
      "dateFinished": "2019-07-11 20:14:52.014",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\ntest_score \u003d clf.score(X_test, y_test)\n\nprint(test_score)",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:00.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "0.8611111111111112\n",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201451_967632182",
      "dateCreated": "2019-07-11 20:14:51.000",
      "dateStarted": "2019-07-11 20:15:00.009",
      "dateFinished": "2019-07-11 20:15:00.121",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\r\ny_df \u003d pd.DataFrame(y_test)\r\n\r\ny_df \u003d y_df.reset_index()\r\n\r\ny_df \u003d y_df.rename(columns\u003d{\u0027index\u0027: \u0027Name\u0027, \u0027poi\u0027: \u0027Actual\u0027})\r\n\r\ny_df.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:07.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "               Name  Actual\n0    KITCHEN LOUISE   False\n1     BAXTER JOHN C   False\n2   THORN TERENCE H   False\n3   HUMPHREY GENE E   False\n4  WALTERS GARETH W   False",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201459_206837929",
      "dateCreated": "2019-07-11 20:14:59.000",
      "dateStarted": "2019-07-11 20:15:07.247",
      "dateFinished": "2019-07-11 20:15:07.357",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nprediction_df \u003d pd.DataFrame(prediction)\n\nprediction_df.columns \u003d [\u0027Prediction\u0027]\n\nprediction_df.head()",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:15.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "   Prediction\n0       False\n1        True\n2       False\n3       False\n4       False",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201507_1407454690",
      "dateCreated": "2019-07-11 20:15:07.000",
      "dateStarted": "2019-07-11 20:15:15.444",
      "dateFinished": "2019-07-11 20:15:15.555",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\noutcomes \u003d y_df.join(prediction_df)\n\noutcomes",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:24.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                    Name  Actual  Prediction\n0         KITCHEN LOUISE   False       False\n1          BAXTER JOHN C   False        True\n2        THORN TERENCE H   False       False\n3        HUMPHREY GENE E   False       False\n4       WALTERS GARETH W   False       False\n5        REDMOND BRIAN L   False       False\n6      BLACHMAN JEREMY M   False       False\n7         WHALEY DAVID A   False       False\n8           DODSON KEITH   False       False\n9      KISHKILL JOSEPH G   False       False\n10  CALGER CHRISTOPHER F    True       False\n11    BAZELIDES PHILIP J   False       False\n12           GRAY RODNEY   False       False\n13       MCMAHON JEFFREY   False       False\n14      PICKERING MARK R   False       False\n15      HERMANN ROBERT J   False       False\n16           GILLIS JOHN   False       False\n17        HANNON KEVIN P    True        True\n18    SKILLING JEFFREY K    True        True\n19       JAEDICKE ROBERT   False       False\n20    JACKSON CHARLENE R   False       False\n21    SHERRICK JEFFREY B   False       False\n22          GIBBS DANA R   False       False\n23             COX DAVID   False       False\n24   DERRICK JR. JAMES V   False        True\n25          SUNDE MARTIN   False       False\n26         LEFF DANIEL P   False       False\n27          BECK SALLY W   False       False\n28  BERGSIEKER RICHARD P   False       False\n29       LOWRY CHARLES P   False       False\n30       GARLAND C KEVIN   False       False\n31        YEAGER F SCOTT    True       False\n32      MEYER ROCKFORD G   False       False\n33        UMANOFF ADAM S   False       False\n34               FOY JOE   False       False\n35    BOWEN JR RAYMOND M    True       False",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201515_643789454",
      "dateCreated": "2019-07-11 20:15:15.000",
      "dateStarted": "2019-07-11 20:15:24.721",
      "dateFinished": "2019-07-11 20:15:24.836",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n# Kevin Hannon\n# https://www.reuters.com/article/us-enron-sentencing/ex-enron-executive-sentenced-to-2-years-in-prison-idUSN0422263820070604\n\n# Jeffrey Skilling CEO\n# https://www.nytimes.com/2019/02/22/business/enron-ceo-skilling-scandal.html\n\n# Scott Yeager dataset is true model is false he was acquitted of all charges after a long legal battle that went to the supreme court\n# same with chris calger charges dismissed https://www.nytimes.com/2007/04/03/business/03enron.html\n# raymond bowen died before he was supposed to testify before congress",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:53.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [
          {}
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201524_770417236",
      "dateCreated": "2019-07-11 20:15:24.000",
      "dateStarted": "2019-07-11 20:15:53.454",
      "dateFinished": "2019-07-11 20:15:53.564",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nskilling \u003d features_list_new[features_list_new[\u0027Name\u0027] \u003d\u003d \u0027SKILLING JEFFREY K\u0027] \n\nskilling",
      "user": "",
      "dateUpdated": "2019-07-11 20:15:58.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                  Name   poi  total_stock_value  total_payments  \\\n95  SKILLING JEFFREY K  True         26093672.0       8682716.0   \n\n    shared_receipt_with_poi     salary  restricted_stock  long_term_incentive  \\\n95                   2042.0  1111258.0         6843672.0            1920000.0   \n\n    exercised_stock_options  deferred_income  bonus-to-salary_ratio      bonus  \n95               19250000.0              0.0               5.039334  5600000.0  ",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201536_984510345",
      "dateCreated": "2019-07-11 20:15:36.000",
      "dateStarted": "2019-07-11 20:15:58.236",
      "dateFinished": "2019-07-11 20:15:58.348",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\nskilling_full \u003d df[df[\u0027_c0\u0027] \u003d\u003d \u0027SKILLING JEFFREY K\u0027] \n\nskilling_full",
      "user": "",
      "dateUpdated": "2019-07-11 20:16:03.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "data": "                   _c0      bonus bonus-to-salary_ratio deferral_payments  \\\n95  SKILLING JEFFREY K  5600000.0      5.03933380007163               0.0   \n\n   deferred_income director_fees exercised_stock_options expenses  \\\n95             0.0           0.0              19250000.0  29336.0   \n\n   fraction_mail_from_poi  fraction_mail_to_poi  ... long_term_incentive  \\\n95     0.8148148148148148  0.008271298593879239  ...           1920000.0   \n\n      other   poi restricted_stock restricted_stock_deferred     salary  \\\n95  22122.0  True        6843672.0                       0.0  1111258.0   \n\n   shared_receipt_with_poi to_messages total_payments total_stock_value  \n95                  2042.0      3627.0      8682716.0        26093672.0  \n\n[1 rows x 24 columns]",
            "type": "TEXT"
          }
        ]
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201557_59791397",
      "dateCreated": "2019-07-11 20:15:57.000",
      "dateStarted": "2019-07-11 20:16:03.813",
      "dateFinished": "2019-07-11 20:16:03.924",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nplt.scatter(new_df[\u0027from_poi_to_this_person\u0027][new_df[\u0027poi\u0027] \u003d\u003d False], new_df[\u0027from_this_person_to_poi\u0027][new_df[\u0027poi\u0027] \u003d\u003d False],color \u003d \u0027b\u0027, label \u003d \u0027Not-POI\u0027)\n\nplt.scatter(new_df[\u0027from_poi_to_this_person\u0027][new_df[\u0027poi\u0027] \u003d\u003d True], new_df[\u0027from_this_person_to_poi\u0027][new_df[\u0027poi\u0027] \u003d\u003d True], color \u003d \u0027r\u0027, label \u003d \u0027POI\u0027)\n\n\nplt.xlabel(\u0027from_poi_to_this_person\u0027)\nplt.ylabel(\u0027from_this_person_to_poi\u0027)\nplt.title(\"Emails to and from poi\")\nplt.legend(loc\u003d\u0027upper right\u0027)\nplt.show() ",
      "user": "",
      "dateUpdated": "2019-07-11 20:16:26.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201603_1968179143",
      "dateCreated": "2019-07-11 20:16:03.000",
      "dateStarted": "2019-07-11 20:16:12.094",
      "dateFinished": "2019-07-11 20:16:12.256",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\n\n# Drawing scatterplot with the modified dataframe\nplt.scatter(new_df[\u0027salary\u0027][new_df[\u0027poi\u0027] \u003d\u003d True],new_df[\u0027bonus\u0027][new_df[\u0027poi\u0027] \u003d\u003d True], color \u003d \u0027r\u0027,\n           label \u003d \u0027POI\u0027)\nplt.scatter(new_df[\u0027salary\u0027][new_df[\u0027poi\u0027] \u003d\u003d False],new_df[\u0027bonus\u0027][new_df[\u0027poi\u0027] \u003d\u003d False],color \u003d \u0027b\u0027,\n           label \u003d \u0027Not-POI\u0027)\n    \nplt.xlabel(\"Salary\")\nplt.ylabel(\"Bonus\")\nplt.title(\"Salary vs bonus\")\nplt.legend(loc\u003d\u0027upper left\u0027)\nplt.show() ",
      "user": "",
      "dateUpdated": "2019-07-11 20:16:46.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201611_377813822",
      "dateCreated": "2019-07-11 20:16:11.000",
      "dateStarted": "2019-07-11 20:16:33.476",
      "dateFinished": "2019-07-11 20:16:33.638",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "%pyspark\nplt.scatter(new_df[\u0027total_payments\u0027][new_df[\u0027poi\u0027] \u003d\u003d False],\n            new_df[\u0027deferral_payments\u0027][new_df[\u0027poi\u0027] \u003d\u003d False],\n            color \u003d \u0027b\u0027, label \u003d \u0027Not-POI\u0027)\n\nplt.scatter(new_df[\u0027total_payments\u0027][new_df[\u0027poi\u0027] \u003d\u003d True],\n            new_df[\u0027deferral_payments\u0027][new_df[\u0027poi\u0027] \u003d\u003d True],\n            color \u003d \u0027r\u0027, label \u003d \u0027POI\u0027)\n\n    \nplt.xlabel(\u0027total_payments\u0027)\nplt.ylabel(\u0027deferral_payments\u0027)\nplt.title(\"Total payments vs deferral payments w.r.t POI\")\nplt.legend(loc\u003d\u0027upper right\u0027)\nplt.show() ",
      "user": "",
      "dateUpdated": "2019-07-11 20:17:06.000",
      "config": {
        "selectedInterpreter": {
          "name": "spark.pyspark",
          "profile": "pyspark",
          "isCustom": false,
          "editorLanguage": "python",
          "className": "org.apache.zeppelin.spark.PySparkInterpreter",
          "isDefault": false
        },
        "colWidth": 12.0,
        "results": [],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201633_522891631",
      "dateCreated": "2019-07-11 20:16:33.000",
      "dateStarted": "2019-07-11 20:17:02.173",
      "dateFinished": "2019-07-11 20:17:02.335",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    },
    {
      "title": "",
      "text": "",
      "user": "",
      "dateUpdated": "2019-07-11 20:17:02.000",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "",
      "id": "20190711-201702_1346790008",
      "dateCreated": "2019-07-11 20:17:02.000",
      "dateStarted": "2019-07-11 20:17:17.000",
      "dateFinished": "2019-07-11 20:17:17.000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 0
    }
  ],
  "name": "ucsd_enron_project",
  "id": "06b61a84fdb04e83baa88e40f39f7bdb",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {},
  "info": {}
}